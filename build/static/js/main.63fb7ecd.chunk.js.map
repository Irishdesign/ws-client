{"version":3,"sources":["serviceWorker.js","store/types.js","store/action.js","Endpoint/index.js","constants.js","utils/index.js","components/SignupModal/index.js","components/LoginModal/index.js","components/CurrencyInput/index.js","components/CreateModal/index.js","components/NavBar/index.js","components/SideMenu/index.js","components/ListItem/index.js","components/AuctionInfoDiv/index.js","components/Orders/index.js","components/Players/index.js","containers/HomeNew/index.js","components/InvitationHeader/index.js","containers/Invitation/index.js","components/TypeBanner/index.js","containers/BidNew/index.js","containers/PresentationNew/index.js","store/reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","SET_USER","SET_CURRENT_AUCTION","SET_SHOW_MENU","SET_SHOW_CREATE","SET_PLAYER_DATA","LOG_OUT","setUser","user","type","types","data","logout","setCurrentAuction","get_AUCTION_API","no","get_PLAYER_AUCTION_API","create_ORDER_API","create_PLAYER_API","start_AUCTION_API","close_AUCTION_API","deduct_AUCTION_API","GET","POST","AUC_TYPE","ENGLISH","DUTCH","SEALED1","SEALED2","INIT_VALUE_TYPE","UNIFORM","GAUSSIAN","SESSION_KEY","signup","values","axios","post","then","response","error","console","log","TOKEN","localStorage","getItem","constants","getUserInfo","method","url","token","setItem","accessToken","getMenu","headers","createAuction","createOrder","createPlayer","name","catch","err","getAuction","layout","labelCol","span","wrapperCol","tailLayout","offset","SignupModal","props","Form","useForm","form","onFinish","useDispatch","a","utils","res","status","message","warning","success","close","visible","title","onCancel","footer","Item","label","rules","required","Password","htmlType","onClick","setFieldsValue","username","email","password","LoginModal","dispatch","React","useEffect","util","callback","r","fieldValue","isNaN","value","initialValue","CurrencyInput","className","style","verticalAlign","display","size","formatter","replace","parser","onChange","placeholder","disabled","block","Option","Select","md","CreateModal","getFieldValue","useState","isAuto","setIsAuto","isSealed","setIsSealed","isDutch","setIsDutch","isGaussian","setIsGaussian","is_auto","open","width","v","e","target","checked","marginRight","NavBar","showLogin","setShowLogin","showSignup","setShowSignup","isLogin","useSelector","state","showMenu","showCreatePanel","showingForum","showingCreate","action","checkUser","info","MenuOutlined","icon","faGavel","removeItem","SubMenu","Menu","SideMenu","setData","openKey","setOpenKey","currentAuction","init","auc_type","d","filter","m","Array","isArray","ele","handleOpenKey","ty","defaultSelectedKeys","defaultOpenKeys","openKeys","mode","theme","inlineCollapsed","RiseOutlined","onTitleClick","map","to","close_time","CloseCircleOutlined","FallOutlined","MailOutlined","ListItem","children","text","AuctionInfo","isPlayer","playerInfo","start_time","left_time","auto_t_fragment","auto_p_fragment","from_std","init_price","period","reservation_price","to_dev","value_type","winner","current_price","getTypeLabel","Object","keys","forEach","formatTime","str","split","formatLabel","blank","init_value","getValueTypeLabel","Orders","hasWinner","chooseSecond","reservationPrice","initValueNoShow","titleNoShow","length","columns","dataIndex","onFilter","record","address","indexOf","sorter","b","sortDirections","dataSource","idx","price","player","time","createdAt","join","pagination","scroll","y","Players","filters","hasSent","current_value","formatData","client","W3CWebSocket","App","rightNow","Date","setCurrentTime","myDeduct","setMyDeduct","setIsClosed","current_auction_data","QueryParamsDemo","onopen","onmessage","resObj","JSON","parse","sendingOut","readyState","waitForConnection","send","query","queryString","search","retrieveAuction","handleAuction","cmd","c","stringify","isBroadcast","sendBroadcast","updateWithCountDown","handleDeductPrice","deductValue","AuctionInfoDiv","orders","players","InvitationHeader","QRCode","require","setInfo","Editor","playerAuctionData","sm","myPrice","setMyPrice","currentTime","playerData","showPlayerPage","leftValue","setLeftValue","rice","updatedAt","myOrder","setMyOrder","setPlayerAuctionData","auctionNo","handleCreateOrder","sendData","player_id","id","prev","push","left_value","getStatus","TypeBanner","clone","reverse","o","getOrdersText","autoFocus","setInitValueNoShow","setTimeout","initialState","store","createStore","ReactDOM","render","exact","path","component","HomeNew","Invitation","PresentationNew","BidNew","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qZAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6CClBOC,G,OAAW,YACXC,EAAsB,sBACtBC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAU,UCHhB,SAASC,EAAQC,GACpB,MAAO,CACHC,KAAMC,EACNC,KAAMH,GAIP,SAASI,IACZ,MAAO,CACHH,KAAMC,EACNC,MAAM,GAIP,IAAME,EAAoB,SAACF,GAC9B,MAAO,CACHF,KAAMC,EACNC,S,uFCdKG,EAAkB,SAACC,GAAD,gEAA2DA,IAC7EC,EAAyB,SAACD,GAAD,uEAAkEA,IAC3FE,EAAmB,SAACF,GAAD,gEAA2DA,EAA3D,WACnBG,EAAoB,SAACH,GAAD,gEAA2DA,EAA3D,YACpBI,EAAoB,SAACJ,GAAD,gEAA2DA,EAA3D,WACpBK,EAAoB,SAACL,GAAD,gEAA2DA,EAA3D,WACpBM,EAAqB,SAACN,GAAD,gEAA2DA,EAA3D,YACrBO,EAAM,MACNC,EAAO,OCbPC,EAAW,CACpBC,QAAS,IACTC,MAAO,IACPC,QAAS,KACTC,QAAS,MAEAC,EAAkB,CAC3BC,QAAS,IACTC,SAAU,KAGDC,EAAc,iB,iBCOdC,EAAS,SAACC,GACnB,OAAOC,IAAMC,KFnBS,sDEmBYF,GAAQG,MACtC,SAACC,GACG,OAAOA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,OAoBlBG,EAAQC,aAAaC,QAAQC,GACtBC,EAAc,WACvB,IAAMJ,EAAQC,aAAaC,QAAQC,GACnC,OAAKH,EACEP,IAAM,CACTY,OAAQC,EACRA,IF/CgB,oDEgDhBrC,KAAM,CAAEsC,MAAOP,KAChBL,MACC,SAACC,GAGG,OADAK,aAAaO,QAAQL,EAAuBP,EAAS3B,KAAKwC,aACnDb,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,MAZD,MAiBVa,EAAU,WACnB,IAAMV,EAAQC,aAAaC,QAAQC,GAGnC,OAAOV,IAAM,CACTY,OAAQC,EACRA,IFpEgB,uDEqEhBK,QAAS,CACL,iBAAkBX,KAEvBL,MACC,SAACC,GAEG,OAAOA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,OAKXe,EAAgB,SAAC3C,GAC1B,IAAM+B,EAAQC,aAAaC,QAAQC,GAEnC,OAAOV,IAAM,CACTY,OAAQC,EACRA,IFtF0B,kDEuF1BrC,KAAMA,EACN0C,QAAS,CACL,iBAAkBX,KAEvBL,MACC,SAACC,GAEG,OAAOA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,OAKXgB,EAAc,SAACxC,EAAIJ,GAC5B,IAAM+B,EAAQC,aAAaC,QAAQC,GAEnC,OAAOV,IAAM,CACTY,OAAQC,EACRA,IAAKA,EAAqBjC,GAC1BJ,KAAMA,EACN0C,QAAS,CACL,iBAAkBX,KAEvBL,MACC,SAACC,GAEG,OAAOA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,OAKXiB,EAAe,SAACzC,EAAI0C,GAC7B,OAAOtB,IAAM,CACTY,OAAQC,EACRA,IAAKA,EAAsBjC,GAC3BJ,KAAM,CAAE8C,UAEPpB,MAAK,SAACC,GACH,OAAOA,EAAS3B,QAEnB+C,OAAM,SAACC,GACJnB,QAAQC,IAAIkB,OAoBXC,EAAa,SAAC7C,GACvB,IAAM2B,EAAQC,aAAaC,QAAQC,GACnC,OAAOV,IAAM,CACTY,OAAQC,EACRA,IAAKA,EAAoBjC,GACzBsC,QAAS,CACL,iBAAkBX,KAEvBL,MACC,SAACC,GACG,OAAOA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,O,OCtKlBsB,EAAS,CACXC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,KAGRE,EAAa,CACfD,WAAY,CACRE,OAAQ,EACRH,KAAM,KAiICI,GA7HK,SAACC,GACjB,MAAeC,IAAKC,UAAbC,EAAP,oBAEMC,GADWC,cACH,uCAAG,WAAOvC,GAAP,eAAAwC,EAAA,6DACblC,QAAQC,IAAIP,GADC,SAIKyC,EAAazC,GAJlB,OAIP0C,EAJO,OAQbpC,QAAQC,IAAI,SAAUmC,GAClBA,EAAIC,QAAU,IACdC,IAAQC,QAAQH,EAAIE,UAGpBA,IAAQE,QAAQ,yBAChBC,KAdS,2CAAH,uDA8DNC,EAAmBd,EAAnBc,QAASD,EAAUb,EAAVa,MACjB,OACI,mCACI,cAAC,IAAD,CACIC,QAASA,EACTC,MAAM,UACNC,SAAU,WACNH,KAEJI,OAAQ,KANZ,SAQI,eAAC,IAAD,2BAAUxB,GAAV,IAAkBU,KAAMA,EAAMd,KAAK,gBAAgBe,SAAUA,EAA7D,UACI,cAAC,IAAKc,KAAN,CACI7B,KAAK,WACL8B,MAAM,OACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,IAAD,MAEJ,cAAC,IAAKH,KAAN,CACI7B,KAAK,QACL8B,MAAM,QACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,IAAD,MAEJ,cAAC,IAAKH,KAAN,CACI7B,KAAK,WACL8B,MAAM,WACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,IAAMC,SAAP,MAEJ,eAAC,IAAKJ,KAAN,2BAAerB,GAAf,cACI,cAAC,IAAD,CAAQxD,KAAK,UAAUkF,SAAS,SAAhC,oBAIA,cAAC,IAAD,CAAQA,SAAS,SAASC,QArE/B,WACXrB,EAAKsB,eAAe,CAChBC,SAAU,MACVC,MAAO,gBACPC,SAAU,WAiEE,gCChIlBnC,GAAS,CACXC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,KAGRE,GAAa,CACfD,WAAY,CACRE,OAAQ,EACRH,KAAM,KA4GCkC,GAxGI,SAAC7B,GAChB,MAAeC,IAAKC,UAAbC,EAAP,oBACM2B,EAAWzB,cAoBjB0B,IAAMC,WAAU,WACRzD,aAAaC,QAAQC,IACrBwD,MAEL,IASH,IAmBQnB,EAAmBd,EAAnBc,QAASD,EAAUb,EAAVa,MACjB,OACI,mCACI,cAAC,IAAD,CACIC,QAASA,EACTC,MAAM,SACNC,SAAU,WACNH,KAEJI,OAAQ,KANZ,SAQI,eAAC,IAAD,2BAAUxB,IAAV,IAAkBU,KAAMA,EAAMd,KAAK,gBAAgBe,SA9D9C,SAACtC,IFpBD,SAACA,EAAQoE,GAC1B,OAAOnE,IAAMC,KFJQ,sDEIYF,GAAQG,MACrC,SAACC,GAIG,OAFAK,aAAaO,QAAQL,EAAuBP,EAAS3B,KAAKwC,aAC1DmD,GAAYA,IACLhE,KAEX,SAACC,GACGC,QAAQC,IAAIF,OEchB8D,CAAWnE,GAAQG,MAAK,SAACkE,GACnBA,GACFL,EAAS3F,EAAQgG,EAAE5F,OACnBsE,KAEEzC,QAAQC,IAAI,qBAsDV,UACI,cAAC,IAAK6C,KAAN,CACI7B,KAAK,WACL8B,MAAM,OACNC,MAAO,CACH,CACIC,UAAU,EACVX,QAAS,gCANrB,SAUI,cAAC,IAAD,MAEJ,cAAC,IAAKQ,KAAN,CACI7B,KAAK,WACL8B,MAAM,WACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,IAAMC,SAAP,MAEJ,eAAC,IAAKJ,KAAN,2BAAerB,IAAf,cACI,cAAC,IAAD,CAAQxD,KAAK,UAAUkF,SAAS,SAAhC,oBAIA,cAAC,IAAD,CAAQA,SAAS,SAASC,QA3D/B,WACXrB,EAAKsB,eAAe,CAChBC,SAAU,MACVE,SAAU,WAwDE,gC,8BC9GlBQ,I,OAAa,SAAApC,GACjB,OAAKqC,MAAMrC,EAAMsC,OAGVtC,EAAMuC,aAFJvC,EAAMsC,QAkDFE,GA9CO,SAAAxC,GAAK,OACzB,qBAAKyC,UAAU,yBAAf,SAME,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBACEA,UAAU,wBACVC,MAAO,CAAEC,cAAe,SAAUC,QAAS,gBAF7C,kBAMA,cAAC,KAAD,CACEC,KAAK,QAELP,MAAOF,GAAWpC,GAClB8C,UAAW,SAAAR,GAAK,MAAI,UAAGA,GAAQS,QAAQ,wBAAyB,MAChEC,OAAQ,SAAAV,GAAK,OAAIA,EAAMS,QAAQ,cAAe,KAC9CE,SAAUjD,EAAMiD,SAChBC,YAAalD,EAAMkD,YACnBC,SAAUnD,EAAMmD,SAChBV,UACqB,SAAnBzC,EAAMmD,SACF,eACAnD,EAAMuC,cAAuC,IAAvBvC,EAAMuC,aAC5B,sBACA,GAENa,OAAK,GAhBP,mBAEmBpD,EAAMuC,uBCvBzBc,GAAWC,KAAXD,OAEFxD,GAAa,CACfD,WAAY,CAER2D,GAAI,CAAEzD,OAAQ,MAsQP0D,GAjQK,SAACxD,GACjB,MAAeC,IAAKC,UAAbC,EAAP,oBACQsD,EAAkBtD,EAAlBsD,cAcR,EAA4B1B,IAAM2B,UAAS,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgC7B,IAAM2B,UAAS,GAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8B/B,IAAM2B,UAAS,GAA7C,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAoCjC,IAAM2B,UAAS,GAAnD,mBAAOO,EAAP,KAAmBC,EAAnB,KAEQpD,EAAmBd,EAAnBc,QAASD,EAAUb,EAAVa,MAEXT,EAAQ,uCAAG,WAAOtC,GAAP,eAAAwC,EAAA,6DAEbxC,EAAOqG,QAAUR,EAFJ,SAGUpD,EAAoBzC,GAH9B,OAGPI,EAHO,OAIb2C,IACApF,OAAO2I,KAAP,eAAoBlG,EAASvB,IAAM,SALtB,2CAAH,sDAQd,OACI,mCACI,cAAC,IAAD,CACImE,QAASA,EACTC,MAAM,cACNC,SAAU,WACNH,KAEJwD,MAAO,IACPpD,OAAQ,GAPZ,SASI,eAAC,IAAD,CACIvB,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,IAEVF,OAAO,aACPU,KAAMA,EACNd,KAAK,gBACLe,SAAUA,EAVd,UAYI,cAAC,IAAKc,KAAN,CACI7B,KAAK,WACL8B,MAAM,OACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,eAAC,KAAD,CACIkB,aAAcnF,EAASC,QACvBqF,MAAO,CACH2B,MAAO,QAEXpB,SAAU,SAACqB,GACPN,EAAWM,IAAMlH,EAASE,OAC1BwG,EAAYQ,IAAMlH,EAASG,SAAW+G,IAAMlH,EAASI,UAP7D,UAUI,cAAC6F,GAAD,CAAQf,MAAOlF,EAASC,QAAxB,qBACA,cAACgG,GAAD,CAAQf,MAAOlF,EAASE,MAAxB,mBACA,cAAC+F,GAAD,CAAQf,MAAOlF,EAASG,QAAxB,qBACA,cAAC8F,GAAD,CAAQf,MAAOlF,EAASI,QAAxB,0BAGR,cAAC,IAAK0D,KAAN,CACI7B,KAAK,QACL8B,MAAM,QACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,IAAD,CACIqB,MAAO,CACH2B,MAAO,YAInB,cAAC,IAAKnD,KAAN,CACI7B,KAAK,SACL8B,MAAM,iBACNuB,MAAO,CACH2B,MAAO,QAEXjD,MAAO,CACH,CACIC,UAAU,IARtB,SAYI,cAAC,KAAD,CACIqB,MAAO,CACH2B,MAAO,YAIjBR,EAeE,KAdA,cAAC,IAAK3C,KAAN,CACI7B,KAAK,aACL8B,MAAM,aACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASE,cAAC,GAAD,CACI6B,YAAY,eACZX,aAAckB,EAAc,kBAItC,cAAC,IAAKvC,KAAN,CACI7B,KAAK,oBACL8B,MAAM,mBACNuB,MAAO,CACH2B,MAAO,QAEXjD,MAAO,CACH,CACIC,UAAU,IARtB,SAYI,cAAC,GAAD,CACM6B,YAAY,eACZX,aAAckB,EAAc,yBAGtC,cAAC,IAAKvC,KAAN,CACI7B,KAAK,aACL8B,MAAM,mBACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,eAAC,KAAD,CACIkB,aAAc9E,EAAgBC,QAC9BgF,MAAO,CACH2B,MAAO,QAEXpB,SAAU,SAACqB,GACPJ,EAAcI,IAAM7G,EAAgBE,WAN5C,UASI,cAAC0F,GAAD,CAAQf,MAAO7E,EAAgBC,QAA/B,qBACA,cAAC2F,GAAD,CAAQf,MAAO7E,EAAgBE,SAA/B,2BAGR,cAAC,IAAKuD,KAAN,CACI7B,KAAK,WACL8B,MAAO8C,EAAa,MAAQ,OAC5B7C,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,GAAD,CACM6B,YAAY,eACZX,aAAckB,EAAc,gBAGtC,cAAC,IAAKvC,KAAN,CACI7B,KAAK,SACL8B,MAAO8C,EAAa,MAAQ,KAC5B7C,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,GAAD,CACM6B,YAAY,eACZX,aAAckB,EAAc,cAGrCM,EACG,cAAC,IAAK7C,KAAN,CAAW7B,KAAK,UAAU8B,MAAM,UAAhC,SACI,cAAC,KAAD,CACI8B,SAAU,SAACsB,GAEPX,EAAUW,EAAEC,OAAOC,UAEvBA,QAASd,MAGjB,KACHA,EACG,qCACI,cAAC,IAAKzC,KAAN,CACI7B,KAAK,kBACL8B,MAAM,kBACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,GAAD,CACO6B,YAAY,eACZX,aAAckB,EAAc,uBAGvC,cAAC,IAAKvC,KAAN,CACI7B,KAAK,kBACL8B,MAAM,kBACNC,MAAO,CACH,CACIC,UAAU,IALtB,SASI,cAAC,KAAD,CACIqB,MAAO,CACH2B,MAAO,eAKvB,KACJ,eAAC,IAAKnD,KAAN,2BAAerB,IAAf,cACI,cAAC,IAAD,CACIxD,KAAK,UACLkF,SAAS,SACTmB,MAAO,CACHgC,YAAa,IAJrB,oBASA,cAAC,IAAD,iC,oBCrKTC,GArFA,SAAC3E,GACZ,MAAkC+B,YAAe,GAAjD,mBAAO6C,EAAP,KAAkBC,EAAlB,KACA,EAAoC9C,YAAe,GAAnD,mBAAO+C,EAAP,KAAmBC,EAAnB,KAEMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WACvC5I,EAAO6I,aAAY,SAACC,GAAD,OAAWA,EAAM9I,QACpC0F,EAAWzB,cACX8E,EAAWF,aAAY,SAACC,GAAD,OAAWA,EAAMC,YACxCC,EAAkBH,aAAY,SAACC,GAAD,OAAWA,EAAME,mBAO/CC,EAAe,WACjBvD,ERLG,CACHzF,KAAMC,EACNC,MQG6B4I,KAE3BG,EAAgB,SAAChB,GACnBxC,ERH0B,SAACwC,GAE/B,MAAO,CACHjI,KAAMC,EACNC,KAAM+H,GQDGiB,CAA0BjB,KAEvCvC,aAAgB,WACZyD,MACD,IACH,IAAMA,EAAS,uCAAG,4BAAAlF,EAAA,sEACK2B,IADL,UACRwD,EADQ,6DAIVA,EAAKhF,QAAU,KAJL,uBAKVC,IAAQC,QAAQ8E,EAAK/E,SALX,0BAQV+E,GACA3D,EAASyD,EAAeE,IATd,2CAAH,qDAYf,OACI,sBAAKhD,UAAU,SAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,kBAAkBjB,QAAS,kBAAM6D,KAAhD,SACI,cAACK,EAAA,EAAD,MAEJ,qBAAKjD,UAAU,UAAf,0BACA,qBAAKA,UAAU,WAAf,SACI,cAAC,KAAD,CAAiBkD,KAAMC,YAI/B,sBAAKnD,UAAU,WAAf,UACMuC,EAUE,qCACI,sBAAKvC,UAAU,SAAf,uBAAmCrG,EAAKsF,YACxC,qBAAKe,UAAU,SAAf,SACI,cAAC,IAAD,CAAQjB,QAAS,kBAAM8D,GAAc,IAArC,2BAKJ,qBAAK7C,UAAU,SAAf,SACI,cAAC,IAAD,CAAQjB,QAAS,kBAxDrCjD,aAAasH,WAAWpH,QACxBqD,EAAStF,MAuDW,0BAlBR,qCACI,qBAAKiG,UAAU,SAAf,SACI,cAAC,IAAD,CAAQjB,QAAS,kBAAMqD,GAAa,IAApC,qBAEJ,qBAAKpC,UAAU,SAAf,SACI,cAAC,IAAD,CAAQjB,QAAS,kBAAMuD,GAAc,IAArC,4BAiBXD,EAAa,cAAC,GAAD,CAAahE,QAASgE,EAAYjE,MAAO,kBAAMkE,GAAc,MAAa,KAEvFH,EAAY,cAAC,GAAD,CAAY9D,QAAS8D,EAAW/D,MAAO,kBAAMgE,GAAa,MAAa,KACnFO,EAAkB,cAAC,GAAD,CAAatE,QAASsE,EAAiBvE,MAAO,kBAAMyE,GAAc,MAAa,Y,gGC9E1GQ,GAAYC,KAAZD,QA4IOE,GA1IE,SAAChG,GAAW,IAAD,QACxB,EAAwB+B,IAAM2B,WAA9B,mBAAOnH,EAAP,KAAa0J,EAAb,KACA,EAA8BlE,IAAM2B,SAAStG,EAASC,SAAtD,mBAAO6I,EAAP,KAAgBC,EAAhB,KACMC,EAAiBnB,aAAY,SAACC,GAAD,OAAWA,EAAMkB,kBAC9CtE,EAAWzB,cACjB0B,IAAMC,WAAU,WACZqE,MACD,IACHtE,IAAMC,WAAU,WACZmE,EAAWC,EAAeE,YAE3B,CAACF,IACJ,IAAMC,EAAI,uCAAG,gCAAA/F,EAAA,sEACOC,IADP,aACHgG,EADG,QAEH9F,QAAU,KAFP,uBAGLC,IAAQC,QAAQ4F,EAAE7F,SAClBoB,EAAStF,KAJJ,8CAUJY,EAASC,QAAUmJ,EAAOpJ,EAASC,QAASkJ,IAVxC,eAWJnJ,EAASE,MAAQkJ,EAAOpJ,EAASE,MAAOiJ,IAXpC,eAYJnJ,EAASG,QAAUiJ,EAAOpJ,EAASG,QAASgJ,IAZxC,eAaJnJ,EAASI,QAAUgJ,EAAOpJ,EAASI,QAAS+I,IAEjDN,EANMQ,EATG,GAkBTrI,QAAQC,IAAI,KAAMoI,GAlBT,4CAAH,qDAoBJD,EAAS,SAACnK,EAAMkK,GAClB,IAAI/F,EAAM,GAIV,OAHIkG,MAAMC,QAAQJ,IAAMA,IACpB/F,EAAG,OAAG+F,QAAH,IAAGA,OAAH,EAAGA,EAAGC,QAAO,SAACI,GAAD,OAASA,EAAIN,WAAajK,MAEvCmE,GAELqG,EAAgB,SAACC,GAKnBX,EAAWW,IAEf,OACI,qBAAKrE,UAAU,WAAf,SACI,eAAC,KAAD,CACIsE,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC5J,EAASC,SAC3B4J,SAAU,CAACf,GACXgB,KAAK,SACLC,MAAM,QACNC,iBAAiB,EANrB,UAQI,cAACtB,GAAD,CAEIH,KAAM,cAAC0B,GAAA,EAAD,IACNtG,MAAM,UACNuG,aAAc,WACVT,EAAczJ,EAASC,UAL/B,SAQKd,IAAI,UACDA,EAAKa,EAASC,gBADb,aACD,EAAwBkK,KAAI,SAACX,GAAD,OACxB,cAAC,KAAK1F,KAAN,UAMI,eAAC,KAAD,CAAMsG,GAAE,eAAUZ,EAAIjK,IAAtB,UACwB,OAAnBiK,EAAIa,WAAsB,cAACC,GAAA,EAAD,IAA0B,KACpDd,EAAI7F,UAPJ6F,EAAIjK,SAVhBS,EAASC,SAsBlB,cAACyI,GAAD,CAEIH,KAAM,cAACgC,GAAA,EAAD,IACN5G,MAAM,QACNuG,aAAc,WACVT,EAAczJ,EAASE,QAL/B,SAQKf,IAAI,UACDA,EAAKa,EAASE,cADb,aACD,EAAsBiK,KAAI,SAACX,GAAD,OACtB,cAAC,KAAK1F,KAAN,UACI,eAAC,KAAD,CAAMsG,GAAE,eAAUZ,EAAIjK,IAAtB,UACwB,OAAnBiK,EAAIa,WAAsB,cAACC,GAAA,EAAD,IAA0B,KACpDd,EAAI7F,UAHG6F,EAAIjK,SATvBS,EAASE,OAiBlB,cAACwI,GAAD,CAEIH,KAAM,cAACiC,GAAA,EAAD,IACN7G,MAAM,SACNuG,aAAc,WACVT,EAAczJ,EAASG,UAL/B,SAQKhB,IAAI,UACDA,EAAKa,EAASG,gBADb,aACD,EAAwBgK,KAAI,SAACX,GAAD,OACxB,cAAC,KAAK1F,KAAN,UACI,eAAC,KAAD,CAAMsG,GAAE,eAAUZ,EAAIjK,IAAtB,UACwB,OAAnBiK,EAAIa,WAAsB,cAACC,GAAA,EAAD,IAA0B,KACpDd,EAAI7F,UAHG6F,EAAIjK,SATvBS,EAASG,SAiBlB,cAACuI,GAAD,CAEIH,KAAM,cAACiC,GAAA,EAAD,IACN7G,MAAM,gBACNuG,aAAc,WACVT,EAAczJ,EAASI,UAL/B,SAQKjB,IAAI,UACDA,EAAKa,EAASI,gBADb,aACD,EAAwB+J,KAAI,SAACX,GAAD,OACxB,cAAC,KAAK1F,KAAN,UACI,eAAC,KAAD,CAAMsG,GAAE,eAAUZ,EAAIjK,IAAtB,UACwB,OAAnBiK,EAAIa,WAAsB,cAACC,GAAA,EAAD,IAA0B,KACpDd,EAAI7F,UAHG6F,EAAIjK,SATvBS,EAASI,eCxHnBqK,I,cAPE,SAAC7H,GAAD,OACb,qBAAIyC,UAAU,WAAd,UACI,qBAAKA,UAAU,QAAf,SAAwBzC,EAAMmB,QAC9B,qBAAKsB,UAAU,OAAf,SAAuBzC,EAAM8H,UAAY9H,EAAM+H,YCiIxCC,GAjIK,SAAChI,GACjB,IAAQzD,EAA+ByD,EAA/BzD,KAAM0L,EAAyBjI,EAAzBiI,SAAUC,EAAelI,EAAfkI,WAEpBvL,EAiBAJ,EAjBAI,GACAoE,EAgBAxE,EAhBAwE,MACAoH,EAeA5L,EAfA4L,WACAC,EAcA7L,EAdA6L,UACAC,EAaA9L,EAbA8L,gBACAC,EAYA/L,EAZA+L,gBACAC,EAWAhM,EAXAgM,SACAC,EAUAjM,EAVAiM,WACArE,EASA5H,EATA4H,QACAsE,EAQAlM,EARAkM,OACAC,EAOAnM,EAPAmM,kBACAC,EAMApM,EANAoM,OACAC,EAKArM,EALAqM,WACAC,EAIAtM,EAJAsM,OACAvC,EAGA/J,EAHA+J,SACAmB,EAEAlL,EAFAkL,WACAqB,EACAvM,EADAuM,cAEEC,EAAe,SAACjC,GAClB,IAAI3F,EAAQ,GAMZ,OALA6H,OAAOC,KAAKxK,GAAoByK,SAAQ,SAACtC,GACjCE,IAAOrI,EAAmBmI,KAC1BzF,EAAQyF,MAGTzF,GAWLgI,EAAa,SAACC,GAAS,IAAD,EACxB,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAKC,MAAM,KAAK,UAAvB,aAAO,EAAoBtG,QAAQ,IAAK,MAGtCuG,EAAc,SAACxC,GACjB,OAAQA,GACJ,IAAK,OACD,OAAO8B,IAAenK,EAA0Bd,SAAW,MAAQmJ,EACvE,IAAK,KACD,OAAO8B,IAAenK,EAA0Bd,SAAW,MAAQmJ,EACvE,QACI,SAGNyC,EAAQ,MAEd,OACI,mCACKtB,EACG,sBAAKxF,UAAU,YAAf,UACI,cAAC,GAAD,CAAUtB,MAAM,QAAQ4G,KAAMhH,GAASwI,IACvC,cAAC,GAAD,CAAUpI,MAAM,KAAhB,SACI,cAAC,KAAD,CAAMqG,GAAE,4BAAuBzG,EAAvB,eAAmCpE,GAAM6H,OAAO,SAAxD,SACK7H,MAIT,cAAC,GAAD,CAAUwE,MAAM,OAAO4G,KAAMgB,EAAazC,KAC1C,cAAC,GAAD,CAAUnF,MAAM,cAAc4G,KAAMS,GAAc,MAClD,iDACCP,GAAYC,EACT,qCACI,cAAC,GAAD,CAAU/G,MAAM,OAAO4G,KAAMG,EAAW7I,OACxC,cAAC,GAAD,CAAU8B,MAAM,gBAAgB4G,KAAMG,EAAWsB,gBAErD,QAGR,qCACI,qBAAI/G,UAAU,QAAd,UACI,cAAC,GAAD,CAAUtB,MAAM,QAAQ4G,KAAMhH,GAASwI,IACvC,cAAC,GAAD,CAAUpI,MAAM,KAAhB,SACI,cAAC,KAAD,CAAMqG,GAAE,4BAAuBzG,EAAvB,eAAmCpE,GAAM6H,OAAO,SAAxD,SACK7H,SAIb,qBAAI8F,UAAU,QAAd,UACI,cAAC,GAAD,CAAUtB,MAAM,WAAW4G,KAAMoB,EAAWhB,IAAeoB,IAC1D9B,EACG,cAAC,GAAD,CAAUtG,MAAM,WAAW4G,KAAMoB,EAAW1B,IAAe8B,IAE3D,cAAC,GAAD,CAAUpI,MAAM,OAAO4G,KAAMK,GAAamB,OAGlD,qBAAI9G,UAAU,QAAd,UACI,cAAC,GAAD,CAAUtB,MAAM,OAAO4G,KAAMgB,EAAazC,KAC1C,cAAC,GAAD,CAAUnF,MAAM,cAAc4G,KAAMS,GAAc,MAClD,cAAC,GAAD,CAAUrH,MAAM,kBAAkB4G,KAAI,UAAKU,EAAL,cAG1C,qBAAIhG,UAAU,QAAd,UACI,cAAC,GAAD,CAAUtB,MAAM,kBAAkB4G,KAvE5B,SAACjB,GACvB,IAAI3F,EAAQ,GAMZ,OALA6H,OAAOC,KAAKxK,GAA2ByK,SAAQ,SAACtC,GACxCE,IAAOrI,EAA0BmI,KACjCzF,EAAQyF,MAGTzF,EAgEiDsI,CAAkBb,KAC1D,cAAC,GAAD,CAAUzH,MAAK,qBAAgBmI,EAAY,SAAWvB,KAAMQ,IAC5D,cAAC,GAAD,CAAUpH,MAAK,qBAAgBmI,EAAY,OAASvB,KAAMY,OAE9D,qBAAIlG,UAAU,QAAd,UACI,cAAC,GAAD,CAAUtB,MAAK,oBAAuB4G,KAAMW,GAAqB,IAChEpC,IAAa7H,EAAmBlB,SAAW+I,IAAa7H,EAAmBjB,QAAU,KAClF,cAAC,GAAD,CAAU2D,MAAK,gBAAmB4G,KAAMS,IAE3CK,EACG,cAAC,GAAD,CAAU1H,MAAK,SAAY4G,KAAMc,IACjCvC,IAAa7H,EAAmBlB,SAAW+I,IAAa7H,EAAmBjB,QAC3E,cAAC,GAAD,CAAU2D,MAAK,gBAAmB4G,KAAMe,IACxC,QAEP3E,EACG,qBAAI1B,UAAU,QAAd,UACI,cAAC,GAAD,CAAUtB,MAAK,UAAa4G,KAAM5D,EAAU,IAAM,MAClD,cAAC,GAAD,CAAUhD,MAAK,sBAAyB4G,KAAMO,IAC9C,cAAC,GAAD,CAAUnH,MAAK,qBAAwB4G,KAAI,UAAKM,EAAL,cAE/C,W,oBC5CTqB,GAhFA,SAAC1J,GACZ,IACoBuG,EADZhK,EAAkFyD,EAAlFzD,KAAMoN,EAA4E3J,EAA5E2J,UAAWC,EAAiE5J,EAAjE4J,aAAcC,EAAmD7J,EAAnD6J,iBAAkBC,EAAiC9J,EAAjC8J,gBAAiBC,EAAgB/J,EAAhB+J,YAmE1E,OACI,qCACMA,EAIE,KAHA,qCACI,cAAC,KAAD,CAAchJ,MAAM,WADxB,WAC4D,OAAJxE,QAAI,IAAJA,OAAA,EAAAA,EAAMyN,SAAU,KAG5E,cAAC,KAAD,CAAOC,QA1DHH,EAsBF,CACI,CACI/I,MAAO,QACPmJ,UAAW,SAEf,CACInJ,MAAO,OACPmJ,UAAW,QAEf,CACInJ,MAAO,OACPmJ,UAAW,SAhCnB,CACI,CACInJ,MAAO,QACPmJ,UAAW,SAEf,CACInJ,MAAO,OACPmJ,UAAW,QAEf,CACInJ,MAAO,aACPmJ,UAAW,aACXC,SAAU,SAAC7H,EAAO8H,GAAR,OAAqD,IAAlCA,EAAOC,QAAQC,QAAQhI,IACpDiI,OAAQ,SAACjK,EAAGkK,GAAJ,OAAUlK,EAAEkJ,WAAagB,EAAEhB,YACnCiB,eAAgB,CAAC,UAAW,WAEhC,CACI1J,MAAO,OACPmJ,UAAW,SAuCMQ,YAzEfnE,EAyEsChK,EAxEtDgK,GACAA,EAAEgB,KAAI,SAACX,EAAK+D,GAER,MAAO,CACHC,MACIjB,GAAagB,KAHHf,EAAe,EAAI,IAGKhD,EAAIgE,OAASf,EAA/C,kBACiBjD,EAAIgE,OACfhE,EAAIgE,MACdvL,KAAMuH,EAAIiE,OAAOxL,KACjBmK,WAAY5C,EAAIiE,OAAOrB,WACvBsB,KAAMlE,EAAImE,UAAU1B,MAAM,KAAK,GAAGA,MAAM,KAAK2B,KAAK,UA8DGC,YAAY,EAAOC,OAAQ,CAAEC,EAAG,WC1BtFC,GAhDC,SAACpL,GACb,IAAQzD,EAASyD,EAATzD,KAuCR,OACI,qCACI,cAAC,KAAD,CAAcwE,MAAM,YADxB,WAC6D,OAAJxE,QAAI,IAAJA,OAAA,EAAAA,EAAMyN,SAAU,EACrE,cAAC,KAAD,CAAOC,QAjCC,CACZ,CACIlJ,MAAO,OACPmJ,UAAW,OACXC,SAAU,SAAC7H,EAAO8H,GAAR,OAAkD,IAA/BA,EAAO/K,KAAKiL,QAAQhI,IACjDiI,OAAQ,SAACjK,EAAGkK,GAAJ,OAAUlK,EAAEjB,KAAK2K,OAASQ,EAAEnL,KAAK2K,QACzCS,eAAgB,CAAC,UAAW,WAEhC,CACI1J,MAAO,aACPmJ,UAAW,UACXmB,QAAS,CACL,CACItD,KAAM,IACNzF,MAAO,KAEX,CACIyF,KAAM,IACNzF,MAAO,MAGf6H,SAAU,SAAC7H,EAAO8H,GAAR,OAAmBA,EAAOkB,UAAYhJ,GAChDiI,OAAQ,SAACjK,EAAGkK,GAAJ,OAAUlK,EAAEsK,MAAQJ,EAAEI,OAC9BH,eAAgB,CAAC,UAAW,YAUHC,WAzCd,SAACnO,GAAD,OACfA,GACAA,EAAKgL,KAAI,SAACX,EAAK+D,GACX,MAAO,CACHtL,KAAMuH,EAAIvH,KACViM,QAAS1E,EAAI4C,WAAa5C,EAAI2E,cAAgB,IAAM,QAoCnBC,CAAWjP,GAAO0O,YAAY,EAAOC,OAAQ,CAAEC,EAAG,WC9B7FM,GAAS,IAAIC,eAAa,qCAgOjBC,OA/Nf,SAAa3L,GACT,IAAM4L,EAAW,IAAIC,KACrB,EAAsC9J,IAAM2B,SAAS,KAArD,mBAAoBoI,GAApB,WAEA,EAAgC/J,IAAM2B,SAASkI,GAA/C,mBACA,GADA,UACgC7J,IAAM2B,SAASkI,IAA/C,mBACA,GADA,UACgC7J,IAAM2B,SAAS,IAA/C,mBAAOqI,EAAP,KAAiBC,EAAjB,KACA,EAAgCtI,oBAAS,GAAzC,mBAAiBuI,GAAjB,WACMC,EAAuBjH,aAAY,SAACC,GAAD,OAAWA,EAAMkB,kBACpDjB,EAAWF,aAAY,SAACC,GAAD,OAAWA,EAAMC,YACxCH,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WACvClD,EAAWzB,cACjB0B,IAAMC,WAAU,WACZmK,MACD,CAACnM,IACJ+B,IAAMC,WAAU,WACZ5D,QAAQC,IAAI,uBAAwB6N,KAIrC,CAACA,IACJnK,IAAMC,WAAU,WACdyJ,GAAOW,OAAS,WACZhO,QAAQC,IAAI,+BAEhBoN,GAAOY,UAAY,SAAC3L,GAChBtC,QAAQC,IAAI,iBAAkBqC,GAC9B,IAAM4L,EAASC,KAAKC,MAAM9L,EAAQnE,MACd,SAAhB+P,EAAOjQ,MACPyP,EAAeQ,EAAOlE,cAa/B,IACD,IAcMqE,EAAa,SAAU/L,IAdH,SAAUwB,GACjC9D,QAAQC,IAAI,qBACe,IAAtBoN,GAAOiB,WACPxK,IAEA9D,QAAQC,IAAI,QAASoN,GAAOiB,YAUhCC,EAAkB,WACdlB,GAAOmB,KAAKlM,OAmCpB,SAASyL,IACL,IAAIU,EAAQC,KAAYN,MAAMxM,EAAMtE,SAASqR,QAE7C,OADAC,EAAgBH,EAAMlQ,IACfkQ,EAAMlQ,GArBjBoF,IAAMC,WAAU,WACZyJ,GAAOW,OAAS,WACZhO,QAAQC,IAAI,+BAEhBoN,GAAOY,UAAY,SAAC3L,GAChBtC,QAAQC,IAAI,iBAAkBqC,MAYnC,IAMH,IAAMsM,EAAe,uCAAG,WAAOrQ,GAAP,IAAA2D,EAAA,SAAAA,EAAA,yDACf3D,EADe,iEAEJ4D,EAAiB5D,GAFb,QAEd2D,EAFc,SAIhBwB,EAASrF,EAAkB6D,IAJX,2CAAH,sDAOf2M,EAAgB,SAACC,EAAKC,GACxB,IXkDqBxQ,EWjDrB,OAAQuQ,GACJ,IAAK,SA5CS,SAAC1M,GACnBpC,QAAQC,IAAI,gBAAiBmC,GAC7BiM,EACCF,KAAKa,UAAU,CACXC,aAAa,EACbhR,KAAM,OAENM,GAAIwP,OAuCDmB,GX8Ca3Q,EW7CYuP,EAAqBvP,GX+CnDoB,IAAM,CACTY,OAAQC,EACRA,IAAKA,EAAsBjC,GAC3BsC,QAAS,CACL,iBAAkBX,KAEvBL,MACC,SAACC,GAEG,OAAOA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,MW1DR,MACJ,IAAK,QACDC,QAAQC,IAAI,4BACZ4N,GAAY,GX4DA,SAACtP,EAAIJ,GAE7B,OAAOwB,IAAM,CACTY,OAAQC,EACRA,IAAKA,EAAsBjC,GAC3BsC,QAAS,CACL,iBAAkBX,KAEvBL,MACC,SAACC,GAEG,OAAOA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,MWzEFoC,CAAmB2L,EAAqBvP,IAC9C,MACJ,IAAK,sBACD4Q,MAWZ,SAASA,IAEWhN,EAAiB2L,EAAqBvP,IAC9CsB,MAAK,SAAC1B,GACFA,IACAuF,EAASyD,EAAyBhJ,IAC7BA,EAAKkL,YACN8F,QAMpB,IAAMC,EAAiB,uCAAG,4BAAAlN,EAAA,2DAClB4L,EAAqBpD,cAAgBiD,EAAW,GAD9B,uBAElBrL,IAAQE,QAAR,4CAFkB,6BAKL,IAAbmL,EALkB,iEXmDApP,EW3CgBuP,EAAqBvP,GX2CjC2H,EW3CqCyH,EX4C5DhO,IAAM,CACTY,OAAQC,EACRA,IAAKA,EAAuBjC,GAC5BsC,QAAS,CACL,iBAAkBX,GAEtB/B,KAAM,CAAEkR,YAAanJ,KACtBrG,MACC,SAACC,GAEG,OADAE,QAAQC,IAAI,gBAAiBH,GACtBA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,MWjEM,aAQhBqC,EARgB,QASdC,QAAU,KATI,wBAUlBC,IAAQC,QAAQH,EAAIE,SAVF,2BAatBA,IAAQE,QAAR,2BAAoCJ,EAAIsI,gBAblB,kCXmDD,IAACnM,EAAI2H,IWnDJ,OAAH,qDAevB,OACI,sBAAK7B,UAAU,MAAf,UACI,cAAC,GAAD,IACA,sBAAKA,UAAU,YAAf,UACK0C,EAAW,cAAC,GAAD,IAAe,KACzBH,EAGE,sBAAKvC,UAAU,eAAf,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC,IAAD,CACIpG,KAAK,UACLmF,QAAS,WACLyL,EAAc,UAHtB,mBAQA,cAAC,IAAD,CACIzL,QAAS,WACLyL,EAAc,UAFtB,mBAOC,cAAC,KAAD,CAAMzF,GAAE,2BAAsB0E,EAAqBvP,IAAM6H,OAAO,SAAhE,6BAIL,cAACkJ,GAAD,CAAgBnR,KAAM2P,IACrBA,EAAqB5F,WAAa7H,EAAmBnB,OAAU4O,EAAqB/H,QAmBjF,KAlBA,sBAAK1B,UAAU,UAAf,UACI,cAAC,KAAD,CAAaQ,SAAU,SAACqB,GAAD,OAAO0H,EAAY1H,IAAIhC,MAAOyJ,IACrD,cAAC,IAAD,CACI1P,KAAK,UACLmF,QAAS,WACLgM,KAHR,oBAQA,cAAC,IAAD,CACIhM,QAAS,WACLwK,EAAY,IAFpB,sBASR,cAAC,GAAD,CACIzP,KAAM2P,EAAqByB,OAC3BhE,UAAWuC,EAAqBzE,WAChCmC,aAAcsC,EAAqB5F,WAAa7H,EAAmBjB,QACnEqM,iBAAkBqC,EAAqBxD,mBAAqB,IAEhE,cAAC,GAAD,CAASnM,KAAM2P,EAAqB0B,aAlDxC,qBAAKnL,UAAU,UAAf,iCCtKLoL,I,cAbU,SAAC7N,GACtB,OACI,qBAAKyC,UAAU,mBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,UAAf,0BACA,qBAAKA,UAAU,WAAf,SACI,cAAC,KAAD,CAAiBkD,KAAMC,gBCLrCkI,GAASC,EAAQ,KAmCRpC,OAlCf,SAAa3L,GACT,MAAwB+B,IAAM2B,SAAS,IAAvC,mBAAO+B,EAAP,KAAauI,EAAb,KACAjM,IAAMC,WAAU,YAIhB,WACI,IAAI6K,EAAQC,KAAYN,MAAMxM,EAAMtE,SAASqR,QAE7CiB,EAAQnB,GANRV,KACD,CAACnM,IAOJ,IAAMpB,EAAG,kBAAc6G,EAAK9I,IAC5B,OACI,sBAAK8F,UAAU,MAAf,UACI,cAAC,GAAD,IACA,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,+DACA,iDAAoBgD,EAAK1E,SACzB,8CAAiB0E,EAAK9I,MACtB,qBAAK8F,UAAU,SAAf,SACI,cAACqL,GAAD,CAAQxL,MAAO1D,MAEnB,8BACI,cAAC,KAAD,CAAM4I,GAAI5I,EAAK4F,OAAO,SAAtB,SACK5F,eCfdqP,I,cAbA,SAACjO,GACZ,IAEqBoJ,EAFb8E,EAAsBlO,EAAtBkO,kBAMR,OACI,qBAAKzL,UAAU,cAAf,SACI,+BANa2G,EAMI,OAAC8E,QAAD,IAACA,OAAD,EAACA,EAAmB5H,SALlC0C,OAAOC,KAAKxK,GAAoB+H,QAAO,SAACI,GAAD,OAASnI,EAAmBmI,KAASwC,YCQrFqC,GAAS,IAAIC,eAAa,qCAE1BjM,GAAS,CACXC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,KAGRE,GAAa,CACfD,WAAY,CACRuO,GAAI,CAAErO,OAAQ,GACdyD,GAAI,CAAEzD,OAAQ,GACdH,KAAM,KAkPCgM,OA9Of,SAAa3L,GACT,MAAeC,IAAKC,UAAbC,EAAP,oBACA,EAA8B4B,IAAM2B,SAAS,GAA7C,mBAAO0K,EAAP,KAAgBC,EAAhB,KACA,EAAsCtM,IAAM2B,SAAS,KAArD,mBAAO4K,EAAP,KAAoBxC,EAApB,KACMyC,EAAatJ,aAAY,SAACC,GAAD,OAAWA,EAAMqJ,cACzCC,EAAiBvJ,aAAY,SAACC,GAAD,OAAWA,EAAMsJ,kBAErD,EAAkCzM,IAAM2B,WAAxC,mBAAO+K,EAAP,KAAkBC,EAAlB,KAKA,EAA8B3M,IAAM2B,SAJhB,CAChB,CAAEiL,KAAM,IAAKC,UAAW,YACxB,CAAED,KAAM,IAAKC,UAAW,cAE5B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkD/M,IAAM2B,SAAS,IAAjE,mBAAOwK,EAAP,KAA0Ba,EAA1B,KACA3Q,QAAQC,IAAI,oBAAqB6P,GACjC,IAAMpM,EAAWzB,cACjB0B,IAAMC,WAAU,WACZmK,IA6EJ,Yfc6BxP,EeZcwP,IfcpCpO,IAAM,CACTY,OAAQC,EACRA,IAAKA,EAA2BjC,KACjCsB,MACC,SAACC,GAEG,OAAOA,EAAS3B,QAEpB,SAAC4B,GACGC,QAAQC,IAAIF,OetBRF,MAAK,SAAC1B,GACFA,IACAwS,EAAqBxS,GAEjBA,EAAK+J,WAAa7H,EAAmBnB,OACrC+Q,EAAW9R,EAAKuM,mBfMR,IAACnM,Ee1FzB4Q,KACD,IACHxL,IAAMC,WAAU,WACZyJ,GAAOW,OAAS,WACZhO,QAAQC,IAAI,+BAEhBoN,GAAOY,UAAY,SAAC3L,GAChBtC,QAAQC,IAAI,wBAAyBqC,GACrC,IAAM4L,EAASC,KAAKC,MAAM9L,EAAQnE,MACd,SAAhB+P,EAAOjQ,MACPyP,EAAeQ,EAAOlE,cAa/B,IACH,IAAMhI,EAAQ,uCAAG,WAAOtC,GAAP,mBAAAwC,EAAA,6DACL0O,EAAoBlR,EAApBkR,UAAW3P,EAASvB,EAATuB,KADN,SAEKkB,EAAmByO,EAAW3P,GAFnC,aAEPmB,EAFO,QAGLC,QAAU,KAHL,uBAITC,IAAQC,QAAQH,EAAIE,SAJX,0BAOboB,ElB3CG,CACHzF,KAAMC,EACNC,KkByCuBiE,IAEvB6N,EAAW,IATE,2CAAH,sDAYd,SAASlC,IACL,IAAIU,EAAQC,KAAYN,MAAMxM,EAAMtE,SAASqR,QAI7C,OAHA5M,EAAKsB,eAAe,CAChBuN,UAAWnC,EAAMlQ,KAEdkQ,EAAMlQ,GAEjB,IASMsS,EAAiB,uCAAG,WAAOlL,GAAP,iBAAAzD,EAAA,4DAEhB4O,EAAW,CACbC,UAAWZ,EAAWa,GACtBxE,MAAO7G,EAAUmK,EAAkBpF,cAAgBsF,IAE1CxD,MAAQ2D,EAAWhD,eANV,uBAOlB7K,IAAQvC,MAAR,+CAPkB,0CAUJoC,EAAkB2N,EAAkBvR,GAAIuS,GAVpC,aAUhB1O,EAVgB,QAYdC,QAAU,KAZI,wBAalBC,IAAQC,QAAQH,EAAIE,SAbF,2BAiBtBoO,GAAW,SAACO,GAER,OADAA,EAAKC,KAAK,CAAE1E,MAAOsE,EAAStE,MAAOgE,UAAWpO,EAAIoO,YAC3CS,KAEXX,EAAalO,EAAI+O,YACjB7O,IAAQE,QAAR,6BAAsCsO,EAAStE,MAA/C,oBAtBsB,4CAAH,sDAsDjB4E,EAAY,WACd,OAAKtB,EAAkB/F,WAEZ+F,EAAkBzG,WAClB,MAEA,UAJA,WAOf,OACI,sBAAKhF,UAAU,MAAf,UACI,cAAC,GAAD,IACA,qBAAKA,UAAU,YAAf,SACK+L,EACG,sBAAK/L,UAAU,aAAf,UACI,qBAAKA,UAAU,cACf,qBAAKA,UAAU,eACf,sBAAKA,UAAU,eAAf,UACI,cAACgN,GAAD,CAAYvB,kBAAmBA,IAC/B,sBAAKzL,UAAU,WAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,QAAf,2BACA,qBAAKA,UAAU,QAAf,gBAAwByL,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAmBpF,mBAE/C,sBAAKrG,UAAU,kBAAf,UACI,qBAAKA,UAAU,QAAf,mBAEA,qBAAKA,UAAU,QAAf,SAAwB6L,aAIpC,sBAAK7L,UAAU,mBAAf,UACI,cAACiL,GAAD,CACInR,KAAM2R,EACNjG,UAAU,EACVC,WAAYqG,EACZE,UAAWA,IAEf,cAAC,GAAD,CAAUtN,MAAM,YAAY2G,SAhD9B,WAClB,IAAM4H,EAAQnD,KAAKC,MAAMD,KAAKa,UAAUyB,IACxC,OACI,6BACKa,EAAMC,UAAUpI,KAAI,SAACqI,GAClB,OAAO,uCAAQA,EAAEhB,UAAV,gBAA2BgB,EAAEhF,cA2CUiF,QAG1C,sBAAKpN,UAAU,wBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,qCACA,qBAAKA,UAAU,QAAf,UAAyC,OAAjByL,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB3C,gBAAiB,MAE5D,qBAAK9I,UAAS,iBAAY+M,KAA1B,SAA0CA,SAE9C,sBAAK/M,UAAU,UAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAAC,KAAD,CACIQ,SAAU,SAACqB,GAAD,OAAO+J,EAAW/J,IAC5BhC,MAAO8L,EACPvL,KAAK,QACLiN,WAAS,MAGjB,qBAAKrN,UAAU,SAAf,SACI,qBACIA,UAAU,MACVjB,QAAS,WACLyN,KAHR,UAMsB,OAAjBf,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB5H,YAAa7H,EAAmBnB,MAAQ,SAAW,mBAO3F,qBAAKmF,UAAU,MAAf,SACI,eAAC,IAAD,2BAAUhD,IAAV,IAAkBU,KAAMA,EAAMd,KAAK,gBAAgBe,SAAUA,EAA7D,UACI,cAAC,IAAKc,KAAN,CACI7B,KAAK,YACL8B,MAAM,aACNC,MAAO,CACH,CACIC,UAAU,EACVX,QAAS,+BANrB,SAUI,cAAC,IAAD,CAAOyC,UAAQ,MAEnB,cAAC,IAAKjC,KAAN,CACI7B,KAAK,OACL8B,MAAM,OACNC,MAAO,CACH,CACIC,UAAU,EACVX,QAAS,+BANrB,SAUI,cAAC,IAAD,MAEJ,eAAC,IAAKQ,KAAN,2BAAerB,IAAf,cACI,cAAC,IAAD,CAAQxD,KAAK,UAAUkF,SAAS,SAAhC,oBAIA,cAAC,IAAD,CAAQA,SAAS,SAASC,QArKvC,WACXrB,EAAKsB,eAAe,CAChBuN,UAAW,GACX3P,KAAM,MAkKc,mC,mBCpP1BoM,GAAS,IAAIC,eAAa,qCA8LjBC,OA5Lf,SAAa3L,GACT,IAAM4L,EAAW,IAAIC,KACrB,EAAe5L,IAAKC,UAAbC,EAAP,oBACA,EAAgC4B,IAAM2B,SAASkI,GAA/C,mBACA,GADA,UACsC7J,IAAM2B,SAAS,MAArD,mBAAO4K,EAAP,KAAoBxC,EAApB,KACA,EAA8B/J,IAAM2B,SAAS,GAA7C,mBAAgB2K,GAAhB,WACA,EAA8CtM,IAAM2B,UAAS,GAA7D,mBAAOoG,EAAP,KAAwBiG,EAAxB,KAEM7D,GADajH,aAAY,SAACC,GAAD,OAAWA,EAAMqJ,cACnBtJ,aAAY,SAACC,GAAD,OAAWA,EAAMkB,mBAC1D,EAAkCrE,IAAM2B,WAAxC,mBACA,GADA,UACkD3B,IAAM2B,SAAS,KAAjE,mBAAOwK,EAAP,KAA0Ba,EAA1B,KAeA,SAAS5C,IACL,IAAIU,EAAQC,KAAYN,MAAMxM,EAAMtE,SAASqR,QAI7C,OAHA5M,EAAKsB,eAAe,CAChBuN,UAAWnC,EAAMlQ,KAEdkQ,EAAMlQ,GAnBA0D,cACjB0B,IAAMC,WAAU,WACZmK,IACAoB,MACD,CAACvN,IACJ+B,IAAMC,WAAU,WACZ5D,QAAQC,IAAI,uBAAwB6N,GAC/BpC,GACGoC,GACAoB,EAAcpB,KAIvB,CAACpC,IAwBJ,IAYM2C,EAAa,SAAU/L,IAZH,SAAUwB,GACN,IAAtBuJ,GAAOiB,WACPxK,IAEA9D,QAAQC,IAAI,QAASoN,GAAOiB,YAShCC,EAAkB,WACdvO,QAAQC,IAAI,oBAAqBqC,GAEjC+K,GAAOmB,KAAKlM,OAOd4M,EAAgB,WAElBb,EACIF,KAAKa,UAAU,CACXC,aAAa,EACbhR,KAAM,OAENM,GAAIwP,QA2DhB,SAASoB,IACLyC,YAAW,WACKzP,EAAiB4L,KACzBlO,MAAK,SAAC1B,GACFA,GAAwB,MAAhBA,EAAKkE,SACbsO,EAAqBxS,GAEjBA,EAAK+J,WAAa7H,EAAmBnB,OACrC+Q,EAAW9R,EAAKuM,eAEfvM,EAAKkL,YACN8F,UAIb,KAEP,OAxEAxL,IAAMC,WAAU,WACZyJ,GAAOW,OAAS,WACZhO,QAAQC,IAAI,+BAEhBoN,GAAOY,UAAY,SAAC3L,GAChBtC,QAAQC,IAAI,iBAAkBqC,GAC9B,IAAM4L,EAASC,KAAKC,MAAM9L,EAAQnE,MACd,SAAhB+P,EAAOjQ,MACPyP,EAAeQ,EAAOlE,cAa/B,IAoDC,qCACI,cAAC,GAAD,IACA,sBAAK3F,UAAU,eAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,SAAf,SAAyB6L,MAE7B,cAACmB,GAAD,CAAYvB,kBAAmBA,IAC/B,qBAAKzL,UAAU,eAAf,gBAA+ByL,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAmBpF,gBAClD,sBAAKrG,UAAU,eAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,cAAC,KAAD,CACIQ,SAAU,WACN8M,GAAoBjG,MAHhC,wBAQA,qBAAKrH,UAAU,UAAf,SACI,cAAC,GAAD,CACIlG,KAAM2P,EAAqByB,OAC3BhE,UAAWuC,EAAqBzE,WAChCmC,aAAcsC,EAAqB5F,WAAa7H,EAAmBjB,QACnEqM,iBAAkBqC,EAAqBxD,mBAAqB,EAC5DoB,gBAAiBA,EACjBC,aAAa,gB,mBCrInCkG,GAAe,CACjB7T,KAAM,GACN4I,SAAS,EACTG,UAAU,EACVC,iBAAiB,EACjBoJ,gBAAgB,EAEhBpI,eAAgB,GAEfmI,WAAY,GACbL,kBAAmB,I,WCvDjBgC,GAAQC,cDyDP,WAAoD,IAA/BjL,EAA8B,uDAAtB+K,GAAc1K,EAAQ,uCACtD,OAAQA,EAAOlJ,MACX,KAAKC,EAED,OAAO,2BACA4I,GADP,IAEI9I,KAAMmJ,EAAOhJ,KACb4I,UAAU,EACVH,SAAS,IAEjB,KAAK1I,EAED,OAAO,2BACA4I,GADP,IAEIkB,eAAgBb,EAAOhJ,OAE/B,KAAKD,EAED,OAAO,2BACA4I,GADP,IAEIC,SAAUI,EAAOhJ,OAEzB,KAAKD,EACD,MAAO,CACH0I,SAAS,EACT5I,KAAM,GACN+I,UAAU,EACVC,iBAAiB,EACjBoJ,gBAAgB,EAChBpI,eAAgB,GAChBmI,WAAY,GACZL,kBAAmB,IAE3B,KAAK5R,EACD,OAAO,2BACA4I,GADP,IAEIE,gBAAiBG,EAAOhJ,OAEhC,KAAKD,EACD,OAAO,2BACA4I,GADP,IAEIqJ,WAAYhJ,EAAOhJ,KACnBiS,gBAAgB,IAExB,QACI,OAAOtJ,MCrGnBkL,IAASC,OACL,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACI,cAAC,KAAD,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,cAAC,KAAD,CAAOF,KAAK,cAAcC,UAAWE,KACrC,cAAC,KAAD,CAAOH,KAAK,gBAAgBC,UAAWG,KACvC,cAAC,KAAD,CAAOJ,KAAK,OAAOC,UAAWI,YAI1CC,SAASC,eAAe,SvBqGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhT,MAAK,SAAAiT,GACjCA,EAAaC,kB","file":"static/js/main.63fb7ecd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SET_USER = \"SET_USER\";\nexport const SET_CURRENT_AUCTION = \"SET_CURRENT_AUCTION\";\nexport const SET_SHOW_MENU = \"SET_SHOW_MENU\";\nexport const SET_SHOW_CREATE = \"SET_SHOW_CREATE\";\nexport const SET_PLAYER_DATA = \"SET_PLAYER_DATA\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const SET_PLAYER_AUCTION_DATA = \"SET_PLAYER_AUCTION_DATA\";\n","import * as types from \"./types\";\n\nexport function setUser(user) {\n    return {\n        type: types.SET_USER,\n        data: user,\n    };\n}\n\nexport function logout() {\n    return {\n        type: types.LOG_OUT,\n        data: false,\n    };\n}\n\nexport const setCurrentAuction = (data) => {\n    return {\n        type: types.SET_CURRENT_AUCTION,\n        data,\n    };\n};\n\nexport const setShowMenu = (v) => {\n   //  console.log(\"setShowMenu\", v);\n    return {\n        type: types.SET_SHOW_MENU,\n        data: v,\n    };\n};\nexport const setShowCreatePanel = (v) => {\n   //  console.log(\"setShowCreatePanel\", v);\n    return {\n        type: types.SET_SHOW_CREATE,\n        data: v,\n    };\n};\n\nexport const setPlayerData = (data) => {\n    return {\n        type: types.SET_PLAYER_DATA,\n        data,\n    };\n};\n\nexport const setPlayerAuctionData = (data) => {\n   return {\n       type: types.SET_PLAYER_AUCTION_DATA,\n       data,\n   };\n};\n\n\n// export function setDetailData(data, events) {\n//     return {\n//         type: types.UPDATE_DETAIL,\n//         payload: { data, events },\n//     };\n// }\n","export const SIGNUP_API = \"https://auc-websocket.herokuapp.com/api/auth/signup\";\nexport const LOGIN_API = \"https://auc-websocket.herokuapp.com/api/auth/signin\";\nexport const MENU_API = \"https://auc-websocket.herokuapp.com/api/auction/list\";\nexport const USER_API = \"https://auc-websocket.herokuapp.com/api/auth/user\";\nexport const create_AUCTION_API = \"https://auc-websocket.herokuapp.com/api/auction\";\nexport const get_AUCTION_API = (no) => `https://auc-websocket.herokuapp.com/api/auction/${no}`;\nexport const get_PLAYER_AUCTION_API = (no) => `https://auc-websocket.herokuapp.com/api/auction/player/${no}`;\nexport const create_ORDER_API = (no) => `https://auc-websocket.herokuapp.com/api/auction/${no}/order`;\nexport const create_PLAYER_API = (no) => `https://auc-websocket.herokuapp.com/api/auction/${no}/player`;\nexport const start_AUCTION_API = (no) => `https://auc-websocket.herokuapp.com/api/auction/${no}/start`;\nexport const close_AUCTION_API = (no) => `https://auc-websocket.herokuapp.com/api/auction/${no}/close`;\nexport const deduct_AUCTION_API = (no) => `https://auc-websocket.herokuapp.com/api/auction/${no}/deduct`;\nexport const GET = \"get\";\nexport const POST = \"post\";\n","export const AUC_TYPE = {\n    ENGLISH: \"E\",\n    DUTCH: \"D\",\n    SEALED1: \"S1\",\n    SEALED2: \"S2\",\n};\nexport const INIT_VALUE_TYPE = {\n    UNIFORM: \"U\",\n    GAUSSIAN: \"G\",\n};\n\nexport const SESSION_KEY = \"acuxxxtoxxxken\";\n","import * as url from \"../Endpoint\";\nimport * as constants from \"../constants\";\nimport axios from \"axios\";\n\nexport const login = (values, callback) => {\n    return axios.post(url.LOGIN_API, values).then(\n        (response) => {\n            // console.log(response);\n            localStorage.setItem(constants.SESSION_KEY, response.data.accessToken);\n            callback && callback();\n            return response;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const signup = (values) => {\n    return axios.post(url.SIGNUP_API, values).then(\n        (response) => {\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\n// old design: everyone can register\n// export const signup = (values, callback) => {\n//    return axios.post(url.SIGNUP_API, values).then(\n//        (response) => {\n//            // console.log(response);\n//            login(values);\n//            callback && callback();\n//            return response;\n//        },\n//        (error) => {\n//            console.log(error);\n//        }\n//    );\n// };\n\nconst TOKEN = localStorage.getItem(constants.SESSION_KEY);\nexport const getUserInfo = () => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    if (!TOKEN) return null;\n    return axios({\n        method: url.POST, //you can set what request you want to be\n        url: url.USER_API,\n        data: { token: TOKEN },\n    }).then(\n        (response) => {\n            // console.log(999999, response.data);\n            localStorage.setItem(constants.SESSION_KEY, response.data.accessToken);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const getMenu = () => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    //  console.log(\"getMenu token\", TOKEN);\n\n    return axios({\n        method: url.GET, //you can set what request you want to be\n        url: url.MENU_API,\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            // console.log(\"getMenu\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const createAuction = (data) => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    //  console.log(\"createAuction token\", TOKEN);\n    return axios({\n        method: url.POST, //you can set what request you want to be\n        url: url.create_AUCTION_API,\n        data: data,\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            // console.log(\"createAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const createOrder = (no, data) => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    //  console.log(\"createOrder token\", TOKEN);\n    return axios({\n        method: url.POST,\n        url: url.create_ORDER_API(no),\n        data: data,\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            // console.log(\"createOrder\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const createPlayer = (no, name) => {\n    return axios({\n        method: url.POST,\n        url: url.create_PLAYER_API(no),\n        data: { name },\n    })\n        .then((response) => {\n            return response.data;\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nexport const getPlayerAuction = (no) => {\n    //  console.log(\"getPlayerAuction token\", no);\n    return axios({\n        method: url.GET,\n        url: url.get_PLAYER_AUCTION_API(no),\n    }).then(\n        (response) => {\n            // console.log(\"getPlayerAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const getAuction = (no) => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    return axios({\n        method: url.GET,\n        url: url.get_AUCTION_API(no),\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const startAuction = (no, data) => {\n    //  console.log(\"startAuction token\", TOKEN);\n    return axios({\n        method: url.GET,\n        url: url.start_AUCTION_API(no),\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            // console.log(\"startAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const closeAuction = (no, data) => {\n    //  console.log(\"closeAuction token\", TOKEN);\n    return axios({\n        method: url.GET,\n        url: url.close_AUCTION_API(no),\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            // console.log(\"closeAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const deductAuction = (no, v) => {\n    return axios({\n        method: url.POST,\n        url: url.deduct_AUCTION_API(no),\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n        data: { deductValue: v },\n    }).then(\n        (response) => {\n            console.log(\"deductAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, Modal, message } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as utils from \"../../utils\";\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nconst SignupModal = (props) => {\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n    const onFinish = async (values) => {\n        console.log(values);\n        //   const res =  utils.signup(values, close);\n\n        const res = await utils.signup(values);\n        // console.log(1111, r.data.accessToken);\n        // ssaveToken(r.data.accessToken);\n        // dispatch(setUser(r.data));\n        console.log(\"signup\", res);\n        if (res.status >= 400) {\n            message.warning(res.message);\n            // return;\n        } else {\n            message.success(\"Successfully created!\");\n            close();\n        }\n\n        //   if (r) {\n        //       dispatch(action.setUser(r));\n        //   }\n\n        //   axios.post(url.LOGIN_API, values).then(\n        //       (response) => {\n        //           console.log(response);\n        //           //  localStorage.setItem(\"token\", response.data.accessToken);\n        //       },\n        //       (error) => {\n        //           console.log(error);\n        //       }\n        //   );\n\n        //    {\n        //       \"username\":\"abc\",\n        //       \"email\":\"abc@gmail.com\",\n        //       \"password\":\"12345\",\n        //       \"roles\":[\"user\"]\n        //   }\n    };\n\n    const onReset = () => {\n        form.resetFields();\n    };\n\n    const onFill = () => {\n        form.setFieldsValue({\n            username: \"abc\",\n            email: \"abc@gmail.com\",\n            password: \"12345\",\n        });\n    };\n    //  function setToken(userToken) {\n    //      sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n    //  }\n    //  const saveToken = (userToken) => {\n    //      localStorage.setItem(\"token\", JSON.stringify(userToken));\n    //      setToken(userToken.token);\n    //  };\n    //  function getToken() {\n    //      const tokenString = sessionStorage.getItem(\"token\");\n    //      const userToken = JSON.parse(tokenString);\n    //      return userToken?.token;\n    //  }\n    const { visible, close } = props;\n    return (\n        <>\n            <Modal\n                visible={visible}\n                title=\"Sign up\"\n                onCancel={() => {\n                    close();\n                }}\n                footer={null}\n            >\n                <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n                    <Form.Item\n                        name=\"username\"\n                        label=\"Name\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        label=\"Password\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                        {/* <Button htmlType=\"button\" onClick={onReset}> */}\n                        <Button htmlType=\"button\" onClick={onFill}>\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default SignupModal;\n","import React from \"react\";\nimport { Form, Input, Button, Modal } from \"antd\";\nimport { setUser } from \"../../store/action\";\nimport { useDispatch } from \"react-redux\";\nimport * as util from \"../../utils\";\nimport * as constants from \"../../constants\";\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nconst LoginModal = (props) => {\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n    const onFinish = (values) => {\n        //   console.log(values);\n        //   setUser(values);\n        util.login(values).then((r) => {\n           if(r){\n            dispatch(setUser(r.data));\n            close();\n           }else{\n              console.log(\"log in error!\")\n           }\n        });\n        //    {\n        //       \"username\":\"abc\",\n        //       \"email\":\"abc@gmail.com\",\n        //       \"password\":\"12345\",\n        //       \"roles\":[\"user\"]\n        //   }\n    };\n   //  const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    React.useEffect(() => {\n        if (localStorage.getItem(constants.SESSION_KEY)) {\n            util.getUserInfo();\n        }\n    }, []);\n    //  const AfterLogin = () => {\n    //      setUser();\n    //      close();\n    //  };\n   //  const onReset = () => {\n   //      form.resetFields();\n   //  };\n\n    const onFill = () => {\n        form.setFieldsValue({\n            username: \"abc\",\n            password: \"12345\",\n        });\n    };\n    //  const TOKEN = constants.SESSION_KEY;\n    //  function ssaveToken(userToken) {\n    //      sessionStorage.setItem(TOKEN, JSON.stringify(userToken));\n    //  }\n    //  const saveToken = (userToken) => {\n    //      localStorage.setItem(TOKEN, JSON.stringify(userToken));\n    //      setToken(userToken.token);\n    //  };\n    //  function getToken() {\n    //      const tokenString = sessionStorage.getItem(TOKEN);\n    //      const userToken = JSON.parse(tokenString);\n    //      return userToken?.token;\n    //  }\n    const { visible, close } = props;\n    return (\n        <>\n            <Modal\n                visible={visible}\n                title=\"Log in\"\n                onCancel={() => {\n                    close();\n                }}\n                footer={null}\n            >\n                <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n                    <Form.Item\n                        name=\"username\"\n                        label=\"name\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input your password!\",\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        label=\"Password\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                        {/* <Button htmlType=\"button\" onClick={onReset}> */}\n                        <Button htmlType=\"button\" onClick={onFill}>\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default LoginModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputNumber } from 'antd';\nimport './currencyInput.scss';\n\nconst fieldValue = props => {\n  if (!isNaN(props.value)) {\n    return props.value;\n  }\n  return props.initialValue;\n};\nconst CurrencyInput = props => (\n  <div className=\"currencyInputContainer\">\n    {/* <div className=\"questionWrapper\">\n      <div className=\"question\"> {props.data.question}</div>\n      <div className=\"hintRight\"> {props.data.hintRight} </div>\n    </div> */}\n\n    <div className=\"currencyBox\">\n      <div className=\"amount\">\n        <div\n          className=\"ant-input-group-addon\"\n          style={{ verticalAlign: 'middle', display: 'inline-table' }}\n        >\n          &pound;\n        </div>\n        <InputNumber\n          size=\"large\"\n          key={`currency:${props.initialValue}`}\n          value={fieldValue(props)}\n          formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n          parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n          onChange={props.onChange}\n          placeholder={props.placeholder}\n          disabled={props.disabled}\n          className={\n            props.disabled === 'true'\n              ? 'currencyTrue'\n              : props.initialValue || props.initialValue === 0\n              ? 'currencyInputFilled'\n              : ''\n          }\n          block\n        />\n      </div>\n    </div>\n  </div>\n);\n\nCurrencyInput.propTypes = {\n  data: PropTypes.any,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  hintRight: PropTypes.string,\n  hintBottom: PropTypes.string,\n  initialValue: PropTypes.number,\n};\nexport default CurrencyInput;\n","import React from \"react\";\nimport { Form, Input, Button, Modal, InputNumber, Select, Checkbox } from \"antd\";\nimport * as utils from \"../../utils\";\nimport { AUC_TYPE, INIT_VALUE_TYPE } from \"../../constants\";\nimport CurrencyInput from \"../CurrencyInput\";\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: {\n        //   sm: { offset: 0 },\n        md: { offset: 11 },\n        //   span: 16,\n    },\n};\n\nconst CreateModal = (props) => {\n    const [form] = Form.useForm();\n    const { getFieldValue } = form;\n//     React.useEffect(()=>{\n//        console.log(1111122222)\n//       setFieldsValue({\n//          auc_type:'E',\n//          title: 'auto make',\n//          period: 3,\n//          init_price:100,\n//          reservation_price:100,\n//          value_type:'U',\n//          from_std:100,\n//          to_dev:200,\n//       });\n//   },[])\n    const [isAuto, setIsAuto] = React.useState(false);\n    const [isSealed, setIsSealed] = React.useState(false);\n    const [isDutch, setIsDutch] = React.useState(false);\n    const [isGaussian, setIsGaussian] = React.useState(false);\n    //  const [type, setType] = React.useState();\n    const { visible, close } = props;\n    //  const dispatch = useDispatch();\n    const onFinish = async (values) => {\n        //   console.log(\"onFinish\", values);\n        values.is_auto = isAuto;\n        const response = await utils.createAuction(values);\n        close();\n        window.open(`/?no=${response.no}`, \"_self\");\n    };\n\n    return (\n        <>\n            <Modal\n                visible={visible}\n                title=\"New Auction\"\n                onCancel={() => {\n                    close();\n                }}\n                width={1000}\n                footer={[]}\n            >\n                <Form\n                    labelCol={{\n                        span: 4,\n                    }}\n                    wrapperCol={{\n                        span: 20,\n                    }}\n                    layout=\"horizontal\"\n                    form={form}\n                    name=\"control-hooks\"\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"auc_type\"\n                        label=\"type\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Select\n                            initialValue={AUC_TYPE.ENGLISH}\n                            style={{\n                                width: \"100%\",\n                            }}\n                            onChange={(v) => {\n                                setIsDutch(v === AUC_TYPE.DUTCH);\n                                setIsSealed(v === AUC_TYPE.SEALED1 || v === AUC_TYPE.SEALED2);\n                            }}\n                        >\n                            <Option value={AUC_TYPE.ENGLISH}>ENGLISH</Option>\n                            <Option value={AUC_TYPE.DUTCH}>DUTCH</Option>\n                            <Option value={AUC_TYPE.SEALED1}>SEALED1</Option>\n                            <Option value={AUC_TYPE.SEALED2}>SEALED2</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"title\"\n                        label=\"title\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input\n                            style={{\n                                width: \"100%\",\n                            }}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"period\"\n                        label=\"Time limitaion\"\n                        style={{\n                            width: \"100%\",\n                        }}\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <InputNumber\n                            style={{\n                                width: \"100%\",\n                            }}\n                        />\n                    </Form.Item>\n                    {!isSealed ? (\n                        <Form.Item\n                            name=\"init_price\"\n                            label=\"init_price\"\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                          <CurrencyInput\n                              placeholder=\"E.g. 500,000\"\n                              initialValue={getFieldValue('init_price')}\n                          />\n                        </Form.Item>\n                    ) : null}\n                    <Form.Item\n                        name=\"reservation_price\"\n                        label=\"Resevation price\"\n                        style={{\n                            width: \"100%\",\n                        }}\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <CurrencyInput\n                              placeholder=\"E.g. 500,000\"\n                              initialValue={getFieldValue('reservation_price')}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"value_type\"\n                        label=\"user value type \"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Select\n                            initialValue={INIT_VALUE_TYPE.UNIFORM}\n                            style={{\n                                width: \"100%\",\n                            }}\n                            onChange={(v) => {\n                                setIsGaussian(v === INIT_VALUE_TYPE.GAUSSIAN);\n                            }}\n                        >\n                            <Option value={INIT_VALUE_TYPE.UNIFORM}>UNIFORM</Option>\n                            <Option value={INIT_VALUE_TYPE.GAUSSIAN}>GAUSSIAN</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"from_std\"\n                        label={isGaussian ? \"std\" : \"from\"}\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <CurrencyInput\n                              placeholder=\"E.g. 500,000\"\n                              initialValue={getFieldValue('from_std')}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"to_dev\"\n                        label={isGaussian ? \"dev\" : \"to\"}\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <CurrencyInput\n                              placeholder=\"E.g. 500,000\"\n                              initialValue={getFieldValue('to_dev')}\n                        />\n                    </Form.Item>\n                    {isDutch ? (\n                        <Form.Item name=\"is_auto\" label=\"is auto\">\n                            <Checkbox\n                                onChange={(e) => {\n                                    // console.log(\"isAuto\", e.target.checked);\n                                    setIsAuto(e.target.checked);\n                                }}\n                                checked={isAuto}\n                            />\n                        </Form.Item>\n                    ) : null}\n                    {isAuto ? (\n                        <>\n                            <Form.Item\n                                name=\"auto_p_fragment\"\n                                label=\"auto_p_fragment\"\n                                rules={[\n                                    {\n                                        required: true,\n                                    },\n                                ]}\n                            >\n                                <CurrencyInput\n                                       placeholder=\"E.g. 500,000\"\n                                       initialValue={getFieldValue('auto_p_fragment')}\n                                 />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"auto_t_fragment\"\n                                label=\"auto_t_fragment\"\n                                rules={[\n                                    {\n                                        required: true,\n                                    },\n                                ]}\n                            >\n                                <InputNumber\n                                    style={{\n                                        width: \"100%\",\n                                    }}\n                                />\n                            </Form.Item>\n                        </>\n                    ) : null}\n                    <Form.Item {...tailLayout}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            style={{\n                                marginRight: 20,\n                            }}\n                        >\n                            Submit\n                        </Button>\n                        <Button>cancel</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default CreateModal;\n","import * as React from \"react\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { Button, message } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style.scss\";\nimport SignupModal from \"../SignupModal\";\nimport * as util from \"../../utils\";\nimport LoginModal from \"../LoginModal\";\nimport CreateModal from \"../CreateModal\";\nimport * as action from \"../../store/action\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGavel } from \"@fortawesome/free-solid-svg-icons\";\nimport { logout } from \"../../store/action\";\nimport * as constants from \"../../constants\";\nconst NavBar = (props) => {\n    const [showLogin, setShowLogin] = React.useState(false);\n    const [showSignup, setShowSignup] = React.useState(false);\n\n    const isLogin = useSelector((state) => state.isLogin);\n    const user = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    const showMenu = useSelector((state) => state.showMenu);\n    const showCreatePanel = useSelector((state) => state.showCreatePanel);\n    //  const showCreatePanel = useSelector((state) => state.showCreatePanel);\n\n    const handleLogout = () => {\n        localStorage.removeItem(constants.SESSION_KEY);\n        dispatch(logout());\n    };\n    const showingForum = () => {\n        dispatch(action.setShowMenu(!showMenu));\n    };\n    const showingCreate = (v) => {\n        dispatch(action.setShowCreatePanel(v));\n    };\n    React.useEffect(() => {\n        checkUser();\n    }, []);\n    const checkUser = async () => {\n        const info = await util.getUserInfo();\n        //   console.log(info);\n        if (!info) return;\n        if (info.status >= 400) {\n            message.warning(info.message);\n            return;\n        }\n        if (info) {\n            dispatch(action.setUser(info));\n        }\n    };\n    return (\n        <div className=\"navBar\">\n            <div className=\"groupLogo\">\n                <div className=\"logoIcon burger\" onClick={() => showingForum(true)}>\n                    <MenuOutlined />\n                </div>\n                <div className=\"logoTxt\">Auction Game</div>\n                <div className=\"logoIcon\">\n                    <FontAwesomeIcon icon={faGavel}></FontAwesomeIcon>\n                </div>\n            </div>\n\n            <div className=\"groupBtn\">\n                {!isLogin ? (\n                    <>\n                        <div className=\"navBtn\">\n                            <Button onClick={() => setShowLogin(true)}>Login</Button>\n                        </div>\n                        <div className=\"navBtn\">\n                            <Button onClick={() => setShowSignup(true)}>New Admin</Button>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className=\"navBtn\">Hi Admin: {user.username}</div>\n                        <div className=\"navBtn\">\n                            <Button onClick={() => showingCreate(true)}>New Auction</Button>\n                        </div>\n\n                       \n\n                        <div className=\"navBtn\">\n                            <Button onClick={() => handleLogout()}>Log out</Button>\n                        </div>\n                    </>\n                )}\n                {showSignup ? <SignupModal visible={showSignup} close={() => setShowSignup(false)} /> : null}\n\n                {showLogin ? <LoginModal visible={showLogin} close={() => setShowLogin(false)} /> : null}\n                {showCreatePanel ? <CreateModal visible={showCreatePanel} close={() => showingCreate(false)} /> : null}\n            </div>\n        </div>\n    );\n};\n// const mapDispatchToProps = {\n\n// }\n// NavBar = connect(null, mapDispatchToProps)(NavBar);\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Menu, message } from \"antd\";\nimport { MailOutlined, RiseOutlined, FallOutlined } from \"@ant-design/icons\";\nimport * as utils from \"../../utils\";\nimport queryString from \"query-string\";\nimport { AUC_TYPE } from \"../../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { logout, setCurrentAuction } from \"../../store/action\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nconst { SubMenu } = Menu;\n\nconst SideMenu = (props) => {\n    const [data, setData] = React.useState();\n    const [openKey, setOpenKey] = React.useState(AUC_TYPE.ENGLISH);\n    const currentAuction = useSelector((state) => state.currentAuction);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        init();\n    }, []);\n    React.useEffect(() => {\n        setOpenKey(currentAuction.auc_type);\n        //   console.log(774411, currentAuction);\n    }, [currentAuction]);\n    const init = async () => {\n        const d = await utils.getMenu();\n        if (d.status >= 400) {\n            message.warning(d.message);\n            dispatch(logout());\n            return;\n        }\n        //   console.log(8888, d, AUC_TYPE.ENGLISH);\n\n        const m = {\n            [AUC_TYPE.ENGLISH]: filter(AUC_TYPE.ENGLISH, d),\n            [AUC_TYPE.DUTCH]: filter(AUC_TYPE.DUTCH, d),\n            [AUC_TYPE.SEALED1]: filter(AUC_TYPE.SEALED1, d),\n            [AUC_TYPE.SEALED2]: filter(AUC_TYPE.SEALED2, d),\n        };\n        setData(m);\n\n        //   dispatch(setCurrentAuction(m[AUC_TYPE.ENGLISH][0]));\n        console.log(2222, m);\n    };\n    const filter = (type, d) => {\n        let res = [];\n        if (Array.isArray(d) && d) {\n            res = d?.filter((ele) => ele.auc_type === type);\n        }\n        return res;\n    };\n    const handleOpenKey = (ty) => {\n        //   if (ty === openKey) {\n        //       console.log(88997766);\n        //       setOpenKey([]);\n        //   }\n        setOpenKey(ty);\n    };\n    return (\n        <div className=\"sideMenu\">\n            <Menu\n                defaultSelectedKeys={[\"1\"]}\n                defaultOpenKeys={[AUC_TYPE.ENGLISH]}\n                openKeys={[openKey]}\n                mode=\"inline\"\n                theme=\"light\"\n                inlineCollapsed={false}\n            >\n                <SubMenu\n                    key={AUC_TYPE.ENGLISH}\n                    icon={<RiseOutlined />}\n                    title=\"English\"\n                    onTitleClick={() => {\n                        handleOpenKey(AUC_TYPE.ENGLISH);\n                    }}\n                >\n                    {data &&\n                        data[AUC_TYPE.ENGLISH]?.map((ele) => (\n                            <Menu.Item\n                                key={ele.no}\n                                //   onClick={(e) => {\n                                //       handleAuction(e.key);\n                                //   }}\n                            >\n                                <Link to={`/?no=${ele.no}`}>\n                                    {ele.close_time !== null ? <CloseCircleOutlined /> : null}\n                                    {ele.title}\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                </SubMenu>\n                <SubMenu\n                    key={AUC_TYPE.DUTCH}\n                    icon={<FallOutlined />}\n                    title=\"Dutch\"\n                    onTitleClick={() => {\n                        handleOpenKey(AUC_TYPE.DUTCH);\n                    }}\n                >\n                    {data &&\n                        data[AUC_TYPE.DUTCH]?.map((ele) => (\n                            <Menu.Item key={ele.no}>\n                                <Link to={`/?no=${ele.no}`}>\n                                    {ele.close_time !== null ? <CloseCircleOutlined /> : null}\n                                    {ele.title}\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                </SubMenu>\n                <SubMenu\n                    key={AUC_TYPE.SEALED1}\n                    icon={<MailOutlined />}\n                    title=\"Sealed\"\n                    onTitleClick={() => {\n                        handleOpenKey(AUC_TYPE.SEALED1);\n                    }}\n                >\n                    {data &&\n                        data[AUC_TYPE.SEALED1]?.map((ele) => (\n                            <Menu.Item key={ele.no}>\n                                <Link to={`/?no=${ele.no}`}>\n                                    {ele.close_time !== null ? <CloseCircleOutlined /> : null}\n                                    {ele.title}\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                </SubMenu>\n                <SubMenu\n                    key={AUC_TYPE.SEALED2}\n                    icon={<MailOutlined />}\n                    title=\"Sealed second\"\n                    onTitleClick={() => {\n                        handleOpenKey(AUC_TYPE.SEALED2);\n                    }}\n                >\n                    {data &&\n                        data[AUC_TYPE.SEALED2]?.map((ele) => (\n                            <Menu.Item key={ele.no}>\n                                <Link to={`/?no=${ele.no}`}>\n                                    {ele.close_time !== null ? <CloseCircleOutlined /> : null}\n                                    {ele.title}\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                </SubMenu>\n            </Menu>\n        </div>\n    );\n};\n\nexport default SideMenu;\n","import * as React from \"react\";\nimport \"./app.scss\";\nconst ListItem = (props) => (\n    <li className=\"ListItem\">\n        <div className=\"label\">{props.label}</div>\n        <div className=\"text\">{props.children || props.text}</div>\n    </li>\n);\n\nexport default ListItem;\n","import React from \"react\";\nimport \"./style.scss\";\nimport ListItem from \"../ListItem\";\nimport * as constants from \"../../constants\";\nimport { Link } from \"react-router-dom\";\nconst AuctionInfo = (props) => {\n    const { data, isPlayer, playerInfo } = props;\n    const {\n        no,\n        title,\n        start_time,\n        left_time,\n        auto_t_fragment,\n        auto_p_fragment,\n        from_std,\n        init_price,\n        is_auto,\n        period,\n        reservation_price,\n        to_dev,\n        value_type,\n        winner,\n        auc_type,\n        close_time,\n        current_price,\n    } = data;\n    const getTypeLabel = (ty) => {\n        let label = \"\";\n        Object.keys(constants.AUC_TYPE).forEach((ele) => {\n            if (ty === constants.AUC_TYPE[ele]) {\n                label = ele;\n            }\n        });\n        return label;\n    };\n    const getValueTypeLabel = (ty) => {\n        let label = \"\";\n        Object.keys(constants.INIT_VALUE_TYPE).forEach((ele) => {\n            if (ty === constants.INIT_VALUE_TYPE[ele]) {\n                label = ele;\n            }\n        });\n        return label;\n    };\n    const formatTime = (str) => {\n        return str?.split(\".\")[0]?.replace(\"T\", \" \");\n    };\n\n    const formatLabel = (ty) => {\n        switch (ty) {\n            case \"from\":\n                return value_type === constants.INIT_VALUE_TYPE.GAUSSIAN ? \"std\" : ty;\n            case \"to\":\n                return value_type === constants.INIT_VALUE_TYPE.GAUSSIAN ? \"dev\" : ty;\n            default:\n                return;\n        }\n    };\n    const blank = \"- -\";\n\n    return (\n        <>\n            {isPlayer ? (\n                <div className=\"forPlayer\">\n                    <ListItem label=\"Title\" text={title || blank} />\n                    <ListItem label=\"No\">\n                        <Link to={`/invitation?title=${title}&no=${no}`} target=\"_blank\">\n                            {no}\n                        </Link>\n                    </ListItem>\n\n                    <ListItem label=\"Type\" text={getTypeLabel(auc_type)} />\n                    <ListItem label=\"Start Price\" text={init_price || \"-\"} />\n                    <h3> - About You - </h3>\n                    {isPlayer && playerInfo ? (\n                        <>\n                            <ListItem label=\"Name\" text={playerInfo.name} />\n                            <ListItem label=\"Initial money\" text={playerInfo.init_value} />\n                        </>\n                    ) : null}\n                </div>\n            ) : (\n                <>\n                    <ul className=\"block\">\n                        <ListItem label=\"Title\" text={title || blank} />\n                        <ListItem label=\"No\">\n                            <Link to={`/invitation?title=${title}&no=${no}`} target=\"_blank\">\n                                {no}\n                            </Link>\n                        </ListItem>\n                    </ul>\n                    <ul className=\"block\">\n                        <ListItem label=\"Start at\" text={formatTime(start_time) || blank} />\n                        {close_time ? (\n                            <ListItem label=\"Close at\" text={formatTime(close_time) || blank} />\n                        ) : (\n                            <ListItem label=\"Left\" text={left_time || blank} />\n                        )}\n                    </ul>\n                    <ul className=\"block\">\n                        <ListItem label=\"Type\" text={getTypeLabel(auc_type)} />\n                        <ListItem label=\"Start Price\" text={init_price || \"-\"} />\n                        <ListItem label=\"Time Limitation\" text={`${period} mins`} />\n                    </ul>\n\n                    <ul className=\"block\">\n                        <ListItem label=\"User value type\" text={getValueTypeLabel(value_type)} />\n                        <ListItem label={`User value ${formatLabel(\"from\")}`} text={from_std} />\n                        <ListItem label={`User value ${formatLabel(\"to\")}`} text={to_dev} />\n                    </ul>\n                    <ul className=\"block\">\n                        <ListItem label={`Reservation price`} text={reservation_price || 0} />\n                        {auc_type === constants.AUC_TYPE.SEALED1 || auc_type === constants.AUC_TYPE.SEALED2 ? null : (\n                            <ListItem label={`Initial price`} text={init_price} />\n                        )}\n                        {winner ? (\n                            <ListItem label={`Winner`} text={winner} />\n                        ) : auc_type !== constants.AUC_TYPE.SEALED1 && auc_type !== constants.AUC_TYPE.SEALED2 ? (\n                            <ListItem label={`Current price`} text={current_price} />\n                        ) : null}\n                    </ul>\n                    {is_auto ? (\n                        <ul className=\"block\">\n                            <ListItem label={`is Auto`} text={is_auto ? \"T\" : \"F\"} />\n                            <ListItem label={`auto price fragment`} text={auto_p_fragment} />\n                            <ListItem label={`auto time fragment`} text={`${auto_t_fragment} mins`} />\n                        </ul>\n                    ) : null}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default AuctionInfo;\n","import React from \"react\";\nimport { Descriptions, Table } from \"antd\";\n\nconst Orders = (props) => {\n    const { data, hasWinner, chooseSecond, reservationPrice, initValueNoShow, titleNoShow } = props;\n    const formatData = (d) =>\n        d &&\n        d.map((ele, idx) => {\n            const winnerIdx = chooseSecond ? 1 : 0;\n            return {\n                price:\n                    hasWinner && idx === winnerIdx && ele.price >= reservationPrice\n                        ? `Winner: ${ele.price}`\n                        : ele.price,\n                name: ele.player.name,\n                init_value: ele.player.init_value,\n                time: ele.createdAt.split(\".\")[0].split(\"T\").join(\" \"),\n            };\n        });\n    const columns = () => {\n        return !initValueNoShow\n            ? [\n                  {\n                      title: \"Price\",\n                      dataIndex: \"price\",\n                  },\n                  {\n                      title: \"Name\",\n                      dataIndex: \"name\",\n                  },\n                  {\n                      title: \"Init value\",\n                      dataIndex: \"init_value\",\n                      onFilter: (value, record) => record.address.indexOf(value) === 0,\n                      sorter: (a, b) => a.init_value - b.init_value,\n                      sortDirections: [\"descend\", \"ascend\"],\n                  },\n                  {\n                      title: \"Time\",\n                      dataIndex: \"time\",\n                  },\n              ]\n            : [\n                  {\n                      title: \"Price\",\n                      dataIndex: \"price\",\n                  },\n                  {\n                      title: \"Name\",\n                      dataIndex: \"name\",\n                  },\n                  {\n                      title: \"Time\",\n                      dataIndex: \"time\",\n                  },\n              ];\n    };\n\n   //  function onChange(pagination, filters, sorter, extra) {\n   //      console.log(\"params\", pagination, filters, sorter, extra);\n   //  }\n    //  const data = [];\n    //  for (let i = 0; i < 100; i++) {\n    //      data.push({\n    //          key: i,\n    //          name: \"John Brown\",\n    //          price: 32,\n    //          Time: \"New York No. 1 Lake Park\",\n    //      });\n    //  }\n\n    return (\n        <>\n            {!titleNoShow ? (\n                <>\n                    <Descriptions title=\"Orders\"></Descriptions>Total: {data?.length || 0}\n                </>\n            ) : null}\n            <Table columns={columns()} dataSource={formatData(data)} pagination={false} scroll={{ y: 200 }} />\n        </>\n    );\n};\n\nexport default Orders;\n","import React, { useState } from \"react\";\nimport { Descriptions, Table } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Players = (props) => {\n    const { data } = props;\n    const formatData = (data) =>\n        data &&\n        data.map((ele, idx) => {\n            return {\n                name: ele.name,\n                hasSent: ele.init_value > ele.current_value ? \"T\" : \"F\",\n            };\n        });\n    const columns = [\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n            onFilter: (value, record) => record.name.indexOf(value) === 0,\n            sorter: (a, b) => a.name.length - b.name.length,\n            sortDirections: [\"descend\", \"ascend\"],\n        },\n        {\n            title: \"Sent order\",\n            dataIndex: \"hasSent\",\n            filters: [\n                {\n                    text: \"T\",\n                    value: \"T\",\n                },\n                {\n                    text: \"F\",\n                    value: \"F\",\n                },\n            ],\n            onFilter: (value, record) => record.hasSent === value,\n            sorter: (a, b) => a.price - b.price,\n            sortDirections: [\"descend\", \"ascend\"],\n        },\n    ];\n    function onChange(pagination, filters, sorter, extra) {\n        console.log(\"params\", pagination, filters, sorter, extra);\n    }\n\n    return (\n        <>\n            <Descriptions title=\"Players\"></Descriptions>Total: {data?.length || 0}\n            <Table columns={columns} dataSource={formatData(data)} pagination={false} scroll={{ y: 200 }} />\n        </>\n    );\n};\n\nexport default Players;\n","import React, { useState } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport \"./App.scss\";\nimport { setCurrentAuction } from \"../../store/action\";\nimport moment from \"moment\";\nimport NavBar from \"../../components/NavBar\";\nimport SideMenu from \"../../components/SideMenu\";\nimport AuctionInfoDiv from \"../../components/AuctionInfoDiv\";\nimport Orders from \"../../components/Orders\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as utils from \"../../utils\";\nimport { Button, InputNumber, message } from \"antd\";\nimport * as constants from \"../../constants\";\nimport Players from \"../../components/Players\";\nimport * as action from \"../../store/action\";\nimport queryString from \"query-string\";\nimport { Link } from \"react-router-dom\";\nconst client = new W3CWebSocket(\"ws://auc-websocket.herokuapp.com/\");\nfunction App(props) {\n    const rightNow = new Date();\n    const [currentTime, setCurrentTime] = React.useState(\"-\");\n\n    const [timerNow, setTimerNow] = React.useState(rightNow);\n    const [testData, setTestData] = React.useState(rightNow);\n    const [myDeduct, setMyDeduct] = React.useState(0);\n    const [isClosed, setIsClosed] = useState(false);\n    const current_auction_data = useSelector((state) => state.currentAuction);\n    const showMenu = useSelector((state) => state.showMenu);\n    const isLogin = useSelector((state) => state.isLogin);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        QueryParamsDemo();\n    }, [props]);\n    React.useEffect(() => {\n        console.log(\"current_auction_data\", current_auction_data);\n      //   if (current_auction_data) {\n      //       startingTimer(current_auction_data);\n      //   }\n    }, [current_auction_data]);\n    React.useEffect(() => {\n      client.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n      };\n      client.onmessage = (message) => {\n          console.log(\"response msg: \", message);\n          const resObj = JSON.parse(message.data);\n          if (resObj.type === \"time\") {\n              setCurrentTime(resObj.left_time);\n          }\n          // const dataFromServer = JSON.parse(message.data);\n          // const stateToChange = {};\n          // if (dataFromServer.type === \"userevent\") {\n          //     stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n          // } else if (dataFromServer.type === \"contentchange\") {\n          //     stateToChange.text = dataFromServer.data.editorContent;\n          // }\n          // stateToChange.userActivity = dataFromServer.data.userActivity;\n          // console.log(\"stateToChange\", stateToChange);\n          // setTestData(stateToChange);\n      };\n  }, []);\n    const waitForConnection = function (callback) {\n       console.log(\"waitForConnection\")\n        if (client.readyState === 1) {\n            callback();\n        } else {\n            console.log(\"Error\", client.readyState);\n            // var that = this;\n            // // optional: implement backoff for interval here\n            // setTimeout(function () {\n            //     that.waitForConnection(callback, interval);\n            // }, interval);\n        }\n    };\n\n    const sendingOut = function (message) {\n        waitForConnection(function () {\n            client.send(message);\n            if (typeof callback !== \"undefined\") {\n            }\n        });\n    };\n   \n    const sendBroadcast = (res) => {\n        console.log(\"sendBroadcast\", res);\n        sendingOut(\n         JSON.stringify({\n             isBroadcast: true,\n             type: \"time\",\n             //  left_time: res,\n             no: QueryParamsDemo(),\n         })\n     );\n    };\n    React.useEffect(() => {\n        client.onopen = () => {\n            console.log(\"WebSocket Client Connected\");\n        };\n        client.onmessage = (message) => {\n            console.log(\"response msg: \", message);\n            // const dataFromServer = JSON.parse(message.data);\n            // const stateToChange = {};\n            // if (dataFromServer.type === \"userevent\") {\n            //     stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n            // } else if (dataFromServer.type === \"contentchange\") {\n            //     stateToChange.text = dataFromServer.data.editorContent;\n            // }\n            // stateToChange.userActivity = dataFromServer.data.userActivity;\n            // console.log(\"stateToChange\", stateToChange);\n            // setTestData(stateToChange);\n        };\n    }, []);\n    function QueryParamsDemo() {\n        let query = queryString.parse(props.location.search);\n        retrieveAuction(query.no);\n        return query.no;\n    }\n    const retrieveAuction = async (no) => {\n        if (!no) return;\n        const a = await utils.getAuction(no);\n        if (a) {\n            dispatch(setCurrentAuction(a));\n        }\n    };\n    const handleAuction = (cmd, c) => {\n        let res;\n        switch (cmd) {\n            case \"start\":\n               //  updateWithCountDown();\n                sendBroadcast();\n                res = utils.startAuction(current_auction_data.no);\n                break;\n            case \"close\":\n                console.log(\"已經關了\");\n                setIsClosed(true);\n                res = utils.closeAuction(current_auction_data.no);\n                break;\n            case \"updateWithCountDown\":\n                updateWithCountDown();\n                break;\n        }\n\n      //   res.then((data) => {\n      //       if (data) {\n      //           dispatch(action.setCurrentAuction(data));\n      //       }\n      //   });\n    };\n    \n    function updateWithCountDown() {\n      //   setTimeout(function () {\n            const res = utils.getAuction(current_auction_data.no);\n            res.then((data) => {\n                if (data) {\n                    dispatch(action.setCurrentAuction(data));\n                    if (!data.close_time) {\n                        updateWithCountDown();\n                    }\n                }\n            });\n      //   }, 1000);\n    }\n    const handleDeductPrice = async () => {\n        if (current_auction_data.current_price - myDeduct < 0) {\n            message.success(`Current price - deduction is less than 0`);\n            return;\n        }\n        if (myDeduct === 0) {\n            return;\n        }\n        const res = await utils.deductAuction(current_auction_data.no, myDeduct);\n        if (res.status >= 400) {\n            message.warning(res.message);\n            return;\n        }\n        message.success(`Current price is ${res.current_price}`);\n    };\n    return (\n        <div className=\"App\">\n            <NavBar />\n            <div className=\"container\">\n                {showMenu ? <SideMenu /> : null}\n                {!isLogin ? (\n                    <div className=\"remider\">Please login</div>\n                ) : (\n                    <div className=\"auctionBlock\">\n                        <div className=\"start_btn\">\n                            <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                    handleAuction(\"start\");\n                                }}\n                            >\n                                Start\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    handleAuction(\"close\");\n                                }}\n                            >\n                                Close\n                            </Button>\n                             <Link to={`/presentation?no=${current_auction_data.no}`} target=\"_blank\">\n                                    Presentation\n                            </Link>\n                        </div>\n                        <AuctionInfoDiv data={current_auction_data} />\n                        {current_auction_data.auc_type === constants.AUC_TYPE.DUTCH && !current_auction_data.is_auto ? (\n                            <div className=\"myOrder\">\n                                <InputNumber onChange={(v) => setMyDeduct(v)} value={myDeduct} />\n                                <Button\n                                    type=\"primary\"\n                                    onClick={() => {\n                                        handleDeductPrice();\n                                    }}\n                                >\n                                    DEDUCT\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        setMyDeduct(0);\n                                    }}\n                                >\n                                    Reset\n                                </Button>\n                            </div>\n                        ) : null}\n                        <Orders\n                            data={current_auction_data.orders}\n                            hasWinner={current_auction_data.close_time}\n                            chooseSecond={current_auction_data.auc_type === constants.AUC_TYPE.SEALED2}\n                            reservationPrice={current_auction_data.reservation_price || 0}\n                        />\n                        <Players data={current_auction_data.players} />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import * as React from \"react\";\nimport \"./style.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGavel } from \"@fortawesome/free-solid-svg-icons\";\nconst InvitationHeader = (props) => {\n    return (\n        <div className=\"invitationNavBar\">\n            <div className=\"groupLogo\">\n                <div className=\"logoTxt\">Auction Game</div>\n                <div className=\"logoIcon\">\n                    <FontAwesomeIcon icon={faGavel}></FontAwesomeIcon>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InvitationHeader;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.scss\";\nimport InvitationHeader from \"../../components/InvitationHeader\";\nimport queryString from \"query-string\";\nconst QRCode = require(\"qrcode.react\");\nfunction App(props) {\n    const [info, setInfo] = React.useState({});\n    React.useEffect(() => {\n        QueryParamsDemo();\n    }, [props]);\n\n    function QueryParamsDemo() {\n        let query = queryString.parse(props.location.search);\n      //   console.log(query);\n        setInfo(query);\n    }\n    const url = `/bid?no=${info.no}`;\n    return (\n        <div className=\"App\">\n            <InvitationHeader />\n            <div className=\"container\">\n                <div className=\"invitation\">\n                    <h1>Welcome to join the auction! </h1>\n                    <h3>Auction title: {info.title}</h3>\n                    <h3>Auction no: {info.no}</h3>\n                    <div className=\"qrCode\">\n                        <QRCode value={url} />\n                    </div>\n                    <div>\n                        <Link to={url} target=\"_blank\">\n                            {url}\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport * as constants from \"../../constants\";\nimport \"./style.scss\";\nconst Editor = (props) => {\n    const { playerAuctionData } = props;\n\n    const convertType = (str) => {\n        return Object.keys(constants.AUC_TYPE).filter((ele) => constants.AUC_TYPE[ele] === str);\n    };\n\n    return (\n        <div className=\"aucType row\">\n            <div>{convertType(playerAuctionData?.auc_type)}</div>\n        </div>\n    );\n};\nexport default Editor;\n","import React, { useState } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport \"./App.scss\";\nimport * as url from \"../../Endpoint\";\nimport AuctionInfoDiv from \"../../components/AuctionInfoDiv\";\nimport * as constants from \"../../constants\";\nimport { Statistic, Row, Col } from \"antd\";\nimport ListItem from \"../../components/ListItem\";\nimport { Form, Input, Button, message, InputNumber } from \"antd\";\nimport * as utils from \"../../utils\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InvitationHeader from \"../../components/InvitationHeader\";\nimport TypeBanner from \"../../components/TypeBanner\";\nimport queryString from \"query-string\";\nimport { setPlayerData } from \"../../store/action\";\nconst client = new W3CWebSocket(\"ws://auc-websocket.herokuapp.com/\");\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        sm: { offset: 0 },\n        md: { offset: 8 },\n        span: 16,\n    },\n};\n\nfunction App(props) {\n    const [form] = Form.useForm();\n    const [myPrice, setMyPrice] = React.useState(0);\n    const [currentTime, setCurrentTime] = React.useState(\"-\");\n    const playerData = useSelector((state) => state.playerData);\n     const showPlayerPage = useSelector((state) => state.showPlayerPage);\n   //  const showPlayerPage = true;  // TODO:need to remove\n    const [leftValue, setLeftValue] = React.useState();\n    const mockMyOrder = [\n        { rice: 100, updatedAt: \"00:12:13\" },\n        { rice: 200, updatedAt: \"00:15:13\" },\n    ]; // TODO:need to remove\n    const [myOrder, setMyOrder] = React.useState(mockMyOrder);\n    const [playerAuctionData, setPlayerAuctionData] = React.useState({});\n    console.log(\"playerAuctionData\", playerAuctionData);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        QueryParamsDemo();\n        updateWithCountDown();\n    }, []);\n    React.useEffect(() => {\n        client.onopen = () => {\n            console.log(\"WebSocket Client Connected\");\n        };\n        client.onmessage = (message) => {\n            console.log(\"Bidder response msg: \", message);\n            const resObj = JSON.parse(message.data);\n            if (resObj.type === \"time\") {\n                setCurrentTime(resObj.left_time);\n            }\n            // const dataFromServer = JSON.parse(message.data);\n            // const stateToChange = {};\n            // if (dataFromServer.type === \"userevent\") {\n            //     stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n            // } else if (dataFromServer.type === \"contentchange\") {\n            //     stateToChange.text = dataFromServer.data.editorContent;\n            // }\n            // stateToChange.userActivity = dataFromServer.data.userActivity;\n            // console.log(\"stateToChange\", stateToChange);\n            // setTestData(stateToChange);\n        };\n    }, []);\n    const onFinish = async (values) => {\n        const { auctionNo, name } = values;\n        const res = await utils.createPlayer(auctionNo, name);\n        if (res.status >= 400) {\n            message.warning(res.message);\n            return;\n        }\n        dispatch(setPlayerData(res));\n        //   setPlayerAuctionData(res.auction);\n        setMyPrice(\"\");\n        //   updateWithCountDown();\n    };\n    function QueryParamsDemo() {\n        let query = queryString.parse(props.location.search);\n        form.setFieldsValue({\n            auctionNo: query.no,\n        });\n        return query.no;\n    }\n    const onFill = () => {\n        form.setFieldsValue({\n            auctionNo: \"\",\n            name: \"\",\n        });\n    };\n    //  const handleTimerUpdate = async ()=>{\n    //    const res = await utils.createOrder(playerAuctionData.no, sendData);\n    //  }\n    const handleCreateOrder = async (isDutch) => {\n        //   console.log(price);\n        const sendData = {\n            player_id: playerData.id,\n            price: isDutch ? playerAuctionData.current_price : myPrice,\n        };\n        if (sendData.price > playerData.current_value) {\n            message.error(`The price is less than you're current value`);\n            return;\n        }\n        const res = await utils.createOrder(playerAuctionData.no, sendData);\n\n        if (res.status >= 400) {\n            message.warning(res.message);\n            return;\n        }\n\n        setMyOrder((prev) => {\n            prev.push({ price: sendData.price, updatedAt: res.updatedAt });\n            return prev;\n        });\n        setLeftValue(res.left_value);\n        message.success(`Your order(price at${sendData.price}) had been sent`);\n    };\n    function updateWithCountDown() {\n      //   setTimeout(function () {\n            const res = utils.getPlayerAuction(QueryParamsDemo());\n            res.then((data) => {\n                if (data) {\n                    setPlayerAuctionData(data);\n                    //   console.log(77777,data)\n                    if (data.auc_type === constants.AUC_TYPE.DUTCH) {\n                        setMyPrice(data.current_price);\n                    }\n                  //   if (!data.close_time) {\n                  //       updateWithCountDown();\n                  //   }\n                }\n            });\n      //   }, 1000);\n    }\n    const convertType = (str) => {\n        return Object.keys(constants.AUC_TYPE).filter((ele) => constants.AUC_TYPE[ele] === str);\n    };\n    const getOrdersText = () => {\n        const clone = JSON.parse(JSON.stringify(myOrder));\n        return (\n            <ul>\n                {clone.reverse().map((o) => {\n                    return <li>{`${o.updatedAt} : $ ${o.price}`}</li>;\n                })}\n            </ul>\n        );\n    };\n    const getStatus = () => {\n        if (!playerAuctionData.start_time) {\n            return \"Waiting\";\n        } else if (playerAuctionData.close_time) {\n            return \"End\";\n        } else {\n            return \"Bidding\";\n        }\n    };\n    return (\n        <div className=\"App\">\n            <InvitationHeader />\n            <div className=\"container\">\n                {showPlayerPage ? (\n                    <div className=\"playerPage\">\n                        <div className=\"cover top\" />\n                        <div className=\"cover down\" />\n                        <div className=\"header fixed\">\n                            <TypeBanner playerAuctionData={playerAuctionData} />\n                            <div className=\"time row\">\n                                <div className=\"highlight block\">\n                                    <div className=\"title\">Current Price</div>\n                                    <div className=\"value\">{playerAuctionData?.current_price}</div>\n                                </div>\n                                <div className=\"highlight block\">\n                                    <div className=\"title\">Timer</div>\n                                    {/* <div className=\"value\">{playerAuctionData?.left_time?.replace(/00\\:/, \"\")}</div> */}\n                                    <div className=\"value\">{currentTime}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"blockAuction row\">\n                            <AuctionInfoDiv\n                                data={playerAuctionData}\n                                isPlayer={true}\n                                playerInfo={playerData}\n                                leftValue={leftValue}\n                            />\n                            <ListItem label=\"My orders\" children={getOrdersText()} />\n                        </div>\n\n                        <div className=\"blockBidder row fixed\">\n                            <div className=\"myMoney\">\n                                <div className=\"label\">👛 My Money: </div>\n                                <div className=\"value\">{playerAuctionData?.current_value || 100}</div>\n\n                                <div className={`status ${getStatus()}`}>{getStatus()}</div>\n                            </div>\n                            <div className=\"myOrder\">\n                                <div className=\"bidInput\">\n                                    <InputNumber\n                                        onChange={(v) => setMyPrice(v)}\n                                        value={myPrice}\n                                        size=\"large\"\n                                        autoFocus\n                                    />\n                                </div>\n                                <div className=\"bidBtn\">\n                                    <div\n                                        className=\"btn\"\n                                        onClick={() => {\n                                            handleCreateOrder();\n                                        }}\n                                    >\n                                        {playerAuctionData?.auc_type === constants.AUC_TYPE.DUTCH ? \"Accept\" : \"BID\"}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"bid\">\n                        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n                            <Form.Item\n                                name=\"auctionNo\"\n                                label=\"Auction No\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please input a auction no!\",\n                                    },\n                                ]}\n                            >\n                                <Input disabled />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please input an user name!\",\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item {...tailLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                                {/* <Button htmlType=\"button\" onClick={onReset}> */}\n                                <Button htmlType=\"button\" onClick={onFill}>\n                                    Reset\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport * as url from \"../../Endpoint\";\nimport AuctionInfoDiv from \"../../components/AuctionInfoDiv\";\nimport * as constants from \"../../constants\";\nimport Orders from \"../../components/Orders\";\nimport { Form, Input, Button, message, InputNumber, Switch } from \"antd\";\nimport * as utils from \"../../utils\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InvitationHeader from \"../../components/InvitationHeader\";\nimport TypeBanner from \"../../components/TypeBanner\";\nimport queryString from \"query-string\";\nimport moment from \"moment\";\nimport { setPlayerData } from \"../../store/action\";\nconst client = new W3CWebSocket(\"ws://auc-websocket.herokuapp.com/\");\n\nfunction App(props) {\n    const rightNow = new Date();\n    const [form] = Form.useForm();\n    const [timerNow, setTimerNow] = React.useState(rightNow);\n    const [currentTime, setCurrentTime] = React.useState(\"-\");\n    const [myPrice, setMyPrice] = React.useState(0);\n    const [initValueNoShow, setInitValueNoShow] = React.useState(true);\n    const playerData = useSelector((state) => state.playerData);\n    const current_auction_data = useSelector((state) => state.currentAuction);\n    const [leftValue, setLeftValue] = React.useState();\n    const [playerAuctionData, setPlayerAuctionData] = React.useState({});\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        QueryParamsDemo();\n        updateWithCountDown();\n    }, [props]);\n    React.useEffect(() => {\n        console.log(\"current_auction_data\", current_auction_data);\n        if (!initValueNoShow) {\n            if (current_auction_data) {\n                sendBroadcast(current_auction_data);\n            }\n        }\n        //  }, [current_auction_data]);\n    }, [initValueNoShow]);\n    function QueryParamsDemo() {\n        let query = queryString.parse(props.location.search);\n        form.setFieldsValue({\n            auctionNo: query.no,\n        });\n        return query.no;\n    }\n\n    //  function startingTimer(data) {\n    //      console.log(\"startingTimer\", data);\n    //      const { period } = data;\n    //      if (timerNow === null) {\n    //          const date = new Date();\n    //          setTimerNow(date);\n    //      }\n    //      console.log(\"timerNow\", timerNow);\n    //      const start = timerNow.getTime();\n    //      const endDate = moment(timerNow).add(period, \"minutes\").toDate();\n    //      const end = endDate.getTime();\n    //      //   const leftTime = end - start;\n    //      const leftTime = 5000;\n    //      countDown(leftTime);\n    //  }\n    const waitForConnection = function (callback) {\n        if (client.readyState === 1) {\n            callback();\n        } else {\n            console.log(\"Error\", client.readyState);\n            // var that = this;\n            // // optional: implement backoff for interval here\n            // setTimeout(function () {\n            //     that.waitForConnection(callback, interval);\n            // }, interval);\n        }\n    };\n    const sendingOut = function (message) {\n        waitForConnection(function () {\n            console.log(\"waitForConnection\", message);\n\n            client.send(message);\n            // if (typeof callback !== \"undefined\") {\n            //    //  callback();\n\n            // }\n        });\n    };\n    const sendBroadcast = () => {\n        //   console.log(\"sendBroadcast\", res);\n        sendingOut(\n            JSON.stringify({\n                isBroadcast: true,\n                type: \"time\",\n                //  left_time: res,\n                no: QueryParamsDemo(),\n            })\n        );\n    };\n    React.useEffect(() => {\n        client.onopen = () => {\n            console.log(\"WebSocket Client Connected\");\n        };\n        client.onmessage = (message) => {\n            console.log(\"response msg: \", message);\n            const resObj = JSON.parse(message.data);\n            if (resObj.type === \"time\") {\n                setCurrentTime(resObj.left_time);\n            }\n            // const dataFromServer = JSON.parse(message.data);\n            // const stateToChange = {};\n            // if (dataFromServer.type === \"userevent\") {\n            //     stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n            // } else if (dataFromServer.type === \"contentchange\") {\n            //     stateToChange.text = dataFromServer.data.editorContent;\n            // }\n            // stateToChange.userActivity = dataFromServer.data.userActivity;\n            // console.log(\"stateToChange\", stateToChange);\n            // setTestData(stateToChange);\n        };\n    }, []);\n    //  async function countDown(leftTime) {\n    //      console.log(\"countDown\", leftTime);\n\n    //      let h, m, s;\n    //      if (leftTime - 1000 >= 0) {\n    //          h = Math.floor((leftTime / 1000 / 60 / 60) % 24);\n    //          m = Math.floor((leftTime / 1000 / 60) % 60);\n    //          s = Math.floor((leftTime / 1000) % 60);\n\n    //          h = checkTime(h);\n    //          m = checkTime(m);\n    //          s = checkTime(s);\n\n    //          function checkTime(i) {\n    //              if (i < 10) {\n    //                  i = \"0\" + i;\n    //              }\n    //              return i;\n    //          }\n\n    //          const res = `${m}:${s}`;\n    //          sendBroadcast(res);\n    //          // const newData = await updateAuction(data.id, { left_time: res });\n    //          //  console.log(66666666,leftTime-1000 )\n\n    //          setTimeout(function () {\n    //              console.log(\"setTimeout\", leftTime - 1000);\n    //              countDown(leftTime - 1000);\n    //          }, 1000);\n    //      } else {\n    //          console.log(\"closing!!!!Front-end\");\n    //      }\n    //  }\n    function updateWithCountDown() {\n        setTimeout(function () {\n            const res = utils.getAuction(QueryParamsDemo());\n            res.then((data) => {\n                if (data && data.status !== 401) {\n                    setPlayerAuctionData(data);\n                    //   console.log(77777,data)\n                    if (data.auc_type === constants.AUC_TYPE.DUTCH) {\n                        setMyPrice(data.current_price);\n                    }\n                    if (!data.close_time) {\n                        updateWithCountDown();\n                    }\n                }\n            });\n        }, 1000);\n    }\n    return (\n        <>\n            <InvitationHeader />\n            <div className=\"presentation\">\n                <div className=\"timer\">\n                    <div className=\"circle\">{currentTime}</div>\n                </div>\n                <TypeBanner playerAuctionData={playerAuctionData} />\n                <div className=\"currentPrice\">{playerAuctionData?.current_price}</div>\n                <div className=\"auctionBlock\">\n                    <div className=\"initValueNoShowContorller\">\n                        <Switch\n                            onChange={() => {\n                                setInitValueNoShow(!initValueNoShow);\n                            }}\n                        />\n                        Show initial value\n                    </div>\n                    <div className=\"myOrder\">\n                        <Orders\n                            data={current_auction_data.orders}\n                            hasWinner={current_auction_data.close_time}\n                            chooseSecond={current_auction_data.auc_type === constants.AUC_TYPE.SEALED2}\n                            reservationPrice={current_auction_data.reservation_price || 0}\n                            initValueNoShow={initValueNoShow}\n                            titleNoShow={true}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import * as types from \"./types\";\n\nconst mockPlayer = {\n    id: 30,\n    name: \"iris\",\n    auction_id: 59,\n    init_value: 87.2754,\n    current_value: 87.2754,\n    updatedAt: \"2021-05-22T16:04:00.963Z\",\n    createdAt: \"2021-05-22T16:04:00.963Z\",\n    auction: {\n        id: 59,\n        no: \"AUC21052240334\",\n        title: \"sealed\",\n        auc_type: \"S1\",\n        from_std: 10,\n        to_dev: 300,\n        value_type: \"U\",\n        winner: null,\n        period: 10,\n        left_period: null,\n        left_time: null,\n        start_time: null,\n        close_time: null,\n        init_price: null,\n        current_price: null,\n        reservation_price: 100,\n        is_auto: null,\n        auto_t_fragment: null,\n        auto_p_fragment: null,\n        create_by: null,\n        update_by: null,\n        createdAt: \"2021-05-22T16:03:34.695Z\",\n        updatedAt: \"2021-05-22T16:03:34.695Z\",\n    },\n};\n\nconst mockAuction = {\n    id: 59,\n    no: \"AUC21052240334\",\n    title: \"sealed\",\n    auc_type: \"S1\",\n    from_std: 10,\n    to_dev: 300,\n    value_type: \"U\",\n    winner: null,\n    period: 10,\n    left_period: null,\n    left_time: null,\n    start_time: null,\n    close_time: null,\n    init_price: null,\n    current_price: null,\n    reservation_price: 100,\n    is_auto: null,\n    auto_t_fragment: null,\n    auto_p_fragment: null,\n    create_by: null,\n    update_by: null,\n    createdAt: \"2021-05-22T16:03:34.695Z\",\n    updatedAt: \"2021-05-22T16:03:34.695Z\",\n};\n\nconst initialState = {\n    user: {},\n    isLogin: false,\n    showMenu: false,\n    showCreatePanel: false,\n    showPlayerPage: false,\n    //  currentAuction: mockAuction,\n    currentAuction: {},\n   //  playerData: mockPlayer,\n     playerData: {},\n    playerAuctionData: {},\n};\nexport function dataReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_USER:\n            // console.log(\"reducser\", action);\n            return {\n                ...state,\n                user: action.data,\n                showMenu: true,\n                isLogin: true,\n            };\n        case types.SET_CURRENT_AUCTION:\n            // console.log(\"SET_CURRENT_AUCTION\", action.data);\n            return {\n                ...state,\n                currentAuction: action.data,\n            };\n        case types.SET_SHOW_MENU:\n            // console.log(\"SET_SHOW_MENU\", action);\n            return {\n                ...state,\n                showMenu: action.data,\n            };\n        case types.LOG_OUT:\n            return {\n                isLogin: false,\n                user: {},\n                showMenu: false,\n                showCreatePanel: false,\n                showPlayerPage: false,\n                currentAuction: {},\n                playerData: {},\n                playerAuctionData: {},\n            };\n        case types.SET_SHOW_CREATE:\n            return {\n                ...state,\n                showCreatePanel: action.data,\n            };\n        case types.SET_PLAYER_DATA:\n            return {\n                ...state,\n                playerData: action.data,\n                showPlayerPage: true,\n            };\n        default:\n            return state;\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport HomeNew from \"./containers/HomeNew\";\nimport Invitation from \"./containers/Invitation\";\n// import Bid from \"./containers/Bid\";\nimport BidNew from \"./containers/BidNew\";\n\nimport PresentationNew from \"./containers/PresentationNew\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { dataReducer } from \"./store/reducers\";\nimport \"antd/dist/antd.css\";\n// import Forum from \"./containers/fourm\";\n\n// import history from \"./history\";\nconst store = createStore(dataReducer);\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={HomeNew} />\n                <Route path=\"/invitation\" component={Invitation} />\n                <Route path=\"/presentation\" component={PresentationNew} />\n                <Route path=\"/bid\" component={BidNew} />\n            </Switch>\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}